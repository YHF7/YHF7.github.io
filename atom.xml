<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不懂IT的男孩</title>
  
  <subtitle>不忘初心，方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-21T05:27:44.056Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Detail</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>仿写 vue2-vuex 案例</title>
    <link href="http://yoursite.com/2018/11/21/2018-11-21/"/>
    <id>http://yoursite.com/2018/11/21/2018-11-21/</id>
    <published>2018-11-21T05:21:48.662Z</published>
    <updated>2018-11-21T05:27:44.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="案例心得"><a href="#案例心得" class="headerlink" title="案例心得"></a>案例心得</h2><ul><li>在分析完那个vuex的小案例后，我觉得自己好像真的明白了vuex是着么写的</li><li>但是在我重新去仿照这个案例写的时候，还是发现了自己有很多的不足</li><li>那也只可以一点点的去查一点点的去写</li><li>在仿写的过程中，也有向源码学习</li><li>从中知道和学到了很多之前自己不会的方法和技巧</li></ul><h2 id="仿写源码"><a href="#仿写源码" class="headerlink" title="仿写源码"></a><a href="https://github.com/YHF7/Vue/tree/master/vue2-vuex-yhf" target="_blank" rel="noopener">仿写源码</a></h2><h2 id="vue2-vuex案例分析"><a href="#vue2-vuex案例分析" class="headerlink" title="vue2-vuex案例分析"></a><a href="https://yhf7.github.io/2018/11/17/vue2-vuex%E6%A1%88%E4%BE%8B/#more" target="_blank" rel="noopener">vue2-vuex案例分析</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>解决jsp给mysql传中文乱码</title>
    <link href="http://yoursite.com/2018/11/15/2018-11-15/"/>
    <id>http://yoursite.com/2018/11/15/2018-11-15/</id>
    <published>2018-11-15T13:20:57.804Z</published>
    <updated>2019-01-07T02:47:02.922Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><ul><li>今天上课的时候做一个javaweb案例</li><li>用到了数据库</li><li>在我插入中文的时候发现了问题在我的数据库中发现，中文变成了问号</li><li>遇到这个问题第一时间肯定是检查 数据库-页面代码-服务器 问题肯定就在这三个里面</li></ul><h1 id="1-我第一时间是看数据库"><a href="#1-我第一时间是看数据库" class="headerlink" title="1. 我第一时间是看数据库"></a>1. 我第一时间是看数据库</h1><ul><li>在数据库中设置了 utf-8 的字符集</li><li>但是在软件中设置 utf-8 保存后是看不见的</li><li>然后就去修改数据，当发现数据修改后可以成功的时候我知道数据库是没有问题的</li></ul><h1 id="2-我再去看页面代码"><a href="#2-我再去看页面代码" class="headerlink" title="2. 我再去看页面代码"></a>2. 我再去看页面代码</h1><ul><li>首先检查发送数据的表单页设置utf8没</li><li>再检查 业务逻辑处理页面的utf8设置了没<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> <span class="keyword">import</span>=<span class="string">"java.util.*,java.sql.*"</span> language=<span class="string">"java"</span> pageEncoding=<span class="string">"UTF-8"</span> %&gt;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html; charset=UTF-8"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>发现加了还是没有效果</li></ul><h1 id="3-我再去看-服务器-是否乱码"><a href="#3-我再去看-服务器-是否乱码" class="headerlink" title="3. 我再去看 服务器 是否乱码"></a>3. 我再去看 服务器 是否乱码</h1><ul><li>jsp 我用的是 apache tomcat 服务器</li><li>检测 服务器文件-&gt;conf-&gt;server.xml 文件</li><li><p>大概在 68 行左右的位置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">"8443"</span> <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>找到这句 看看 是否有设置 URIEncoding=”UTF-8”</p></li><li>但是做到了这里还是没有效果</li></ul><h1 id="4-按道理做完前面的应该可以了啊-我再去看-业务逻辑代码"><a href="#4-按道理做完前面的应该可以了啊-我再去看-业务逻辑代码" class="headerlink" title="4. 按道理做完前面的应该可以了啊 我再去看 业务逻辑代码"></a>4. 按道理做完前面的应该可以了啊 我再去看 业务逻辑代码</h1><ul><li><p>想起在链接数据库的时候加一个utf8的字符集可不可以</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/book?useUnicode=true&amp;characterEncoding=UTF-8"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br></pre></td></tr></table></figure></li><li><p>在数据库链接加入 ?useUnicode=true&amp;characterEncoding=UTF-8 来设置字符集</p></li><li>这样就成功显示了中文了</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="JavaWeb" scheme="http://yoursite.com/categories/JavaWeb/"/>
    
    
      <category term="JavaWeb笔记" scheme="http://yoursite.com/tags/JavaWeb%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Vue通过请求获取api接口数据/代理跨域</title>
    <link href="http://yoursite.com/2018/11/10/2018-11-10/"/>
    <id>http://yoursite.com/2018/11/10/2018-11-10/</id>
    <published>2018-11-10T14:24:04.376Z</published>
    <updated>2018-11-23T12:11:59.862Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="我知道也用过的有两种"><a href="#我知道也用过的有两种" class="headerlink" title="我知道也用过的有两种"></a>我知道也用过的有两种</h3><ol><li>vue-resource （已不维护了）</li><li>axios （越来越多人用）</li><li>vue代理跨域（补充）</li></ol><h3 id="那我们就来说是着么用吧"><a href="#那我们就来说是着么用吧" class="headerlink" title="那我们就来说是着么用吧"></a>那我们就来说是着么用吧</h3><h3 id="1-vue-resource"><a href="#1-vue-resource" class="headerlink" title="1. vue-resource"></a>1. vue-resource</h3><ul><li><p>引入的方法有 3 种</p><ul><li>引入 1 直接使用网络的引用地址 <script src="https://cdn.jsdelivr.net/npm/vue-resource@1.5.1"></script> （速度会慢一点）</li><li>引入 2 把包下载下来本地引用 <script src="./lib/vue-resource-1.3.4.js"></script></li><li>引入 3 在项目中 用 npm 下载引用  在main.js文件内配置 下载 npm i vue-resource -S 有cnpm最好用cnpm安装快<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 包</span></span><br><span class="line"><span class="keyword">import</span> VueResource <span class="keyword">from</span> <span class="string">'vue-resource'</span>;</span><br><span class="line"><span class="comment">// 安装包</span></span><br><span class="line">Vue.use(VueResource);</span><br><span class="line"><span class="comment">// 设置请求的根路径</span></span><br><span class="line">Vue.http.options.root = <span class="string">'http://127.0.0.1:5000'</span>; <span class="comment">// 我们访问后台的路径大多相同所以直接设置根路径就不用每次都全部打了</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用方法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- body中的代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引用 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"get请求"</span> @<span class="attr">click</span>=<span class="string">"getInfo"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"post请求"</span> @<span class="attr">click</span>=<span class="string">"postInfo"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"jsonp请求"</span> @<span class="attr">click</span>=<span class="string">"jsonpInfo"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建 Vue 实例，得到 ViewModel</span></span><br><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">'#app'</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    getInfo() &#123; <span class="comment">// 发起get请求</span></span><br><span class="line">      <span class="comment">//  当发起get请求之后， 通过 .then 来设置成功的回调函数</span></span><br><span class="line">      <span class="keyword">this</span>.$http.get(<span class="string">'http://nodecms.applinzi.com/api/getcs'</span>).then(<span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 通过 result.body 拿到服务器返回的成功的数据</span></span><br><span class="line">        <span class="built_in">console</span>.log(result.body)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    postInfo() &#123; <span class="comment">// 发起 post 请求   application/x-wwww-form-urlencoded</span></span><br><span class="line">      <span class="comment">//  手动发起的 Post 请求，默认没有表单格式，所以，有的服务器处理不了</span></span><br><span class="line">      <span class="comment">//  通过 post 方法的第三个参数， &#123; emulateJSON: true &#125; 设置 提交的内容类型 为 普通表单数据格式</span></span><br><span class="line">      <span class="keyword">this</span>.$http.post(<span class="string">'http://nodecms.applinzi.com/api/getpost'</span>, &#123;&#125;, &#123;</span><br><span class="line">        emulateJSON: <span class="literal">true</span></span><br><span class="line">      &#125;).then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result.body)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    jsonpInfo() &#123; <span class="comment">// 发起JSONP 请求</span></span><br><span class="line">      <span class="keyword">this</span>.$http.jsonp(<span class="string">'http://vue.studyit.io/api/jsonp'</span>).then(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(result.body)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-axios"><a href="#2-axios" class="headerlink" title="2.axios"></a>2.axios</h3><ul><li>引入方法<ul><li>方法1 项目安装 npm i axios -S (npm,cnpm,bower喜欢那个用那个)</li><li>方法2 <script src="https://unpkg.com/axios/dist/axios.min.js"></script></li></ul></li><li><p>用法和vue-resource差不多</p><ul><li><p>main.js 配置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置axios</span></span><br><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="comment">// 配置公共url</span></span><br><span class="line">Axios.defaults.baseURL = <span class="string">'http://127.0.0.1:5000/api/'</span></span><br><span class="line">Vue.prototype.$axios = Axios</span><br></pre></td></tr></table></figure></li><li><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$axios</span><br><span class="line">  .get(<span class="string">"getlunbo"</span>)</span><br><span class="line">  .then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// res.data.message = [&#123;img: '图片地址'&#125;]</span></span><br><span class="line">    <span class="keyword">this</span>.imgs = res.data.message;</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="params">err</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">"轮播图获取异常"</span>));</span><br></pre></td></tr></table></figure></li></ul></li></ul><h3 id="3-代理跨域"><a href="#3-代理跨域" class="headerlink" title="3.代理跨域"></a>3.代理跨域</h3><ul><li>虽然上面的方法都挺好但是面对跨域问题，如果后端不去设置的话就会出现跨域获取出错的问题</li><li>这里只是说 vue-cli 开启的项目设置代理跨域因为其他的我不太会</li><li>现在流行前后台分离开发，就是前端先前端的页面，后端写后端的接口。但是，当两者的工作合并的时候，要么前端自己搭建一个服务器，要么后端开启跨域让前端访问接口，我一般在开发的时候采用的是后者。但是这个是很坑的，经常出现无法跨域的错误。</li><li><p>Vue-cli中自带了代理，当你配置了这个代理之后，你访问他人电脑的接口的时候，就像访问自己本机的接口一样，避免了跨域的问题。</p></li><li><p>首先找到，config下面的index.js，然后，打开，关键代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">dev: &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Paths</span></span><br><span class="line">    assetsSubDirectory: <span class="string">'static'</span>,</span><br><span class="line">    assetsPublicPath: <span class="string">'/'</span>,</span><br><span class="line">    proxyTable: &#123;</span><br><span class="line">      <span class="string">'/Home'</span> : &#123;</span><br><span class="line">        target: <span class="string">'https://lit-plains-29389.herokuapp.com'</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">"/api"</span>:&#123;</span><br><span class="line">        target: <span class="string">'https://lit-plains-29389.herokuapp.com'</span>,</span><br><span class="line">        changeOrigin: <span class="literal">true</span>,</span><br><span class="line">        pathRewrite: &#123;</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  <span class="comment">// Various Dev Server settings</span></span><br><span class="line">  host: <span class="string">'localhost'</span>, <span class="comment">// can be overwritten by process.env.HOST</span></span><br><span class="line">  port: <span class="number">8080</span>, <span class="comment">// can be overwritten by process.env.PORT, if port is in use, a free one will be determined</span></span><br><span class="line">  autoOpenBrowser: <span class="literal">false</span>,</span><br><span class="line">  errorOverlay: <span class="literal">true</span>,</span><br><span class="line">  notifyOnErrors: <span class="literal">true</span>,</span><br><span class="line">  poll: <span class="literal">false</span>, <span class="comment">// https://webpack.js.org/configuration/dev-server/#devserver-watchoptions-</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Use Eslint Loader?</span></span><br><span class="line">  <span class="comment">// If true, your code will be linted during bundling and</span></span><br><span class="line">  <span class="comment">// linting errors and warnings will be shown in the console.</span></span><br><span class="line">  useEslint: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// If true, eslint errors and warnings will also be shown in the error overlay</span></span><br><span class="line">  <span class="comment">// in the browser.</span></span><br><span class="line">  showEslintErrorsInOverlay: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * Source Maps</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// https://webpack.js.org/configuration/devtool/#development</span></span><br><span class="line">  devtool: <span class="string">'cheap-module-eval-source-map'</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">// If you have problems debugging vue-files in devtools,</span></span><br><span class="line">  <span class="comment">// set this to false - it *may* help</span></span><br><span class="line">  <span class="comment">// https://vue-loader.vuejs.org/en/options.html#cachebusting</span></span><br><span class="line">  cacheBusting: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  cssSourceMap: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>target就是要代理到的目标地址，changeOrigin的意思相比不必多说了。至于pathRewrite，就是在这个例子中，比如/Home/Index就会映射到<a href="https://lit-plains-29389.herokuapp.com/Home/Index" target="_blank" rel="noopener">https://lit-plains-29389.herokuapp.com/Home/Index</a>,<br>而如果开启了这个选项，比如第二个，假设/api/Home/Index,则会映射到<a href="https://lit-plains-29389.herokuapp.com/Home/Index。" target="_blank" rel="noopener">https://lit-plains-29389.herokuapp.com/Home/Index。</a></p></li><li><p>简单点说就是做一个替换</p></li><li><p>说明：我的vue-cli所在的端口是localhos:8080</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue笔记" scheme="http://yoursite.com/tags/Vue%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>hexo 装修地址</title>
    <link href="http://yoursite.com/2018/11/09/2018-11-09(2)/"/>
    <id>http://yoursite.com/2018/11/09/2018-11-09(2)/</id>
    <published>2018-11-09T07:22:36.218Z</published>
    <updated>2018-11-09T07:45:38.423Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a href="https://zhuanlan.zhihu.com/p/28128674" target="_blank" rel="noopener">知乎 hexonext 主题</a><br><a href="https://blog.vinlic.com/p/56088/" target="_blank" rel="noopener">添加页面 3d 动画</a><br><a href="https://www.xiaocoder.com/2018/07/15/hexo-blog-optimizing-guide/" target="_blank" rel="noopener">xiao’sblog 优化</a><br><a href="https://asdfv1929.github.io/2018/05/26/next-add-music/" target="_blank" rel="noopener">添加主题音乐</a><br><a href="https://www.jianshu.com/p/4e094e41c1ab" target="_blank" rel="noopener">主题添加分类</a><br><a href="https://www.jianshu.com/p/393d067dba8d" target="_blank" rel="noopener">主题不显示全文</a><br><a href="https://www.jianshu.com/p/7e30afa09fab" target="_blank" rel="noopener">添加侧边栏小图标</a><br><a href="http://blog.hlz.space/tags/next%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">hester 博客优化</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="Hexo装修" scheme="http://yoursite.com/tags/Hexo%E8%A3%85%E4%BF%AE/"/>
    
  </entry>
  
  <entry>
    <title>ngrok 外网映射 （解决测试时外部无法访问本地网站的）</title>
    <link href="http://yoursite.com/2018/11/09/2018-11-09/"/>
    <id>http://yoursite.com/2018/11/09/2018-11-09/</id>
    <published>2018-11-09T03:42:37.962Z</published>
    <updated>2018-11-09T04:19:18.921Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="日常开发坑"><a href="#日常开发坑" class="headerlink" title="日常开发坑"></a>日常开发坑</h1><ul><li>在我们做开发的同学们很多时候开发好了一个项目之后发现只是可以再电脑内部去查看或者是通过本地端口设置同一网络下查看业务</li><li>那么我们肯定会想上到线上项目不需要在同一网络下也可以去访问</li><li>那么第一时间我们肯定是会想到 云端服务器 阿里云/新浪云/腾讯云等很多的网上服务器</li><li>对的我也想到了，当是首先<ul><li>网上服务器要钱买</li><li>网上服务器要配置</li></ul></li><li>再想想我就想丢上去看看而已替换成外网测试一下看看行不行<ul><li>买服务器不是买一天两天想着应该用不完</li></ul></li></ul><h1 id="那么我就发现了一个好用的东西-ngrok-外网映射"><a href="#那么我就发现了一个好用的东西-ngrok-外网映射" class="headerlink" title="那么我就发现了一个好用的东西 ngrok 外网映射"></a>那么我就发现了一个好用的东西 ngrok 外网映射</h1><ul><li>ngrok 并不是真的就把项目就挂载到了网上</li><li>是通过 映射端口 把本地端口映射到了外网</li><li>所以当我们吧 ngrok 关闭 或者是 本地的服务关闭了后就会断开</li></ul><h1 id="在使用之前要有-apache-服务器"><a href="#在使用之前要有-apache-服务器" class="headerlink" title="在使用之前要有 apache 服务器"></a>在使用之前要有 apache 服务器</h1><ul><li>（mac 是自带的 win 自己安装 配置这里我就不说虽然 mac 自带但是我弄了好久现在不想再去说了 ） </li><li>（也不一定非要用 apache 服务器的因为是映射端口有开启服务就好）</li><li>把项目部署到了 apache 服务器</li><li>开启服务 本地查看是否可以运行</li></ul><h1 id="说了那么多废话现在开始走进-ngrok-的世界"><a href="#说了那么多废话现在开始走进-ngrok-的世界" class="headerlink" title="说了那么多废话现在开始走进 ngrok 的世界"></a>说了那么多废话现在开始走进 ngrok 的世界</h1><ul><li><a href="https://ngrok.com/download" target="_blank" rel="noopener">ngrok 下载官网</a></li><li>不急着下载因为后面的步骤需要用到全局配置 所有先注册一个账号 有 github 的可以直接登录</li><li>然后点击 download 那个下载就好啦</li><li>把安装包下载下来之后手动解压就可以了</li><li>然后打开终端 在解压出 ngrok 的文件夹下执行配置</li><li>./ngrok authtoken 3fW4eXHdUN3ziCBXcahZ_3tnDdaTyLw8tKzJtKZkLp 3 开头这一段每个人都不同的根据登录的账号会有提示的</li><li>最后一步就是 映射端口 根据你本地开启的端口而定 ./ngrok http 80 （开启的是 80 端口就用 80 端口，默认 apache 是 80 端口）</li></ul><h1 id="前面那么多字懒得看看不懂的还是来看图解把"><a href="#前面那么多字懒得看看不懂的还是来看图解把" class="headerlink" title="前面那么多字懒得看看不懂的还是来看图解把"></a>前面那么多字懒得看看不懂的还是来看图解把</h1><p><img src="/ngrok/ngrok1.png" alt="ngrok"><br><img src="/ngrok/ngrok2.png" alt="ngrok"><br><img src="/ngrok/ngrok3.png" alt="ngrok"><br><img src="/ngrok/ngrok4.png" alt="ngrok"><br><img src="/ngrok/ngrok5.png" alt="ngrok"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="插件/配置" scheme="http://yoursite.com/categories/%E6%8F%92%E4%BB%B6-%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="外网映射" scheme="http://yoursite.com/tags/%E5%A4%96%E7%BD%91%E6%98%A0%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>node/php使用心得</title>
    <link href="http://yoursite.com/2018/11/07/2018-11-07/"/>
    <id>http://yoursite.com/2018/11/07/2018-11-07/</id>
    <published>2018-11-07T14:09:44.951Z</published>
    <updated>2018-11-07T14:28:12.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天有个师弟让我写一个用户注册权限的后端服务，第一个想法是用node，但是他的服务端没有node，只有php，可能是我很久没有写php的代码所以写起来还是很不习惯，写node的时候只是关心，接口，业务逻辑，操作数据库分开三步写很顺手，但是用php写，顿时脑子是比较空白的，长时间不去使用一个语言突然就要去写真的就会想不起来这么写好，只能看着以前写过的服务一点一点的拿起来，虽然是写出来了但是感觉用起来还是觉得node比php好用，虽然用起来都是比较简单</p><p>node 判断路由-&gt;业务逻辑-&gt;数据库操作<br>php 业务逻辑-&gt;数据库操作</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>完成YHF-Vue项目心得</title>
    <link href="http://yoursite.com/2018/11/04/2018-11-04/"/>
    <id>http://yoursite.com/2018/11/04/2018-11-04/</id>
    <published>2018-11-04T03:17:21.356Z</published>
    <updated>2018-11-04T03:34:41.412Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>完成了vue项目的时候，内心是很开心的，终于做成了一个小项目了，从当初的只是一个界面到，后面要去写后端，但是一开始不会写后端接口，那个时候真的很烦躁，后来发现了一个别人写好的跨域交互的案例，就打开来看学着别人的去写，那时候发现噢原来我自己也是可以用node去写后端的接口的喔，那时候就用node去写接口，顺着别人的思路和骨架去写，后面发现不单止要写后端接口还要去操作数据库，虽然我会一点点数据库操作，但是我对数据库的设计并不是非常的了解，只可以边写前端的页面需要用到什么的时候，看着教程的项目接口自己去设计和操作数据库，一开始也是很多碰壁的，设计好数据库图片数据用什么方式存呢也想了很久，后面就是操作数据库查询，也是一点一点的写上网查询慢慢的去改进，解决了后端的事情还是继续去写前端，就是一次又一次的写前端页面-&gt;接口-&gt;操作数据-&gt;获取返回数据，在这个时候我发现其实做后端开发也是不容易虽然说是分好路由、业务逻辑、操作数据库，但是还是挺苦的，慢慢端熟悉了其实也觉得没什么吧，在写前端页面的时候虽然是跟着教程做但是也是出现了很多的bug，也是让我很苦恼，这只是一个小小的项目就让我心态都要奔溃了，这个购物商场也还是没有写完的呢还有很多的功能可以完善，其实我很想说项目写到了后面前面的好像又忘记了，我的天啊这样着么在it界混下去呢；<br>很多的技术好像都学过但是到了用的时候发现自己脑子里面好像什么都没有，好像自己从来都没有接触过一样，一步一步慢慢的走吧！准备写一个博客的小项目</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>YHF-Vue 前后端交互 购物城项目</title>
    <link href="http://yoursite.com/2018/11/04/yhf-vue/"/>
    <id>http://yoursite.com/2018/11/04/yhf-vue/</id>
    <published>2018-11-04T02:13:47.359Z</published>
    <updated>2018-11-15T15:02:20.309Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><ul><li>前端 (2.vue-cms)<ul><li>webpack</li><li>vue</li></ul></li><li>后端 (node_server)<ul><li>node</li></ul></li><li>数据库 (VueUser.sql)<ul><li>mysql</li></ul></li><li>后端接口api</li><li><a href="https://yhf7.github.io/2018/10/17/npm-Plug-in/" target="_blank" rel="noopener">插件安装配置</a></li><li><a href="https://github.com/YHF7/Vue/tree/master/YHF-vue" target="_blank" rel="noopener">完整项目下载Github</a></li><li><a href="https://gitee.com/yhf7/vue0001" target="_blank" rel="noopener">码云前端地址</a></li><li><a href="https://gitee.com/yhf7/node" target="_blank" rel="noopener">码云后端地址</a></li><li>更多vue学习请看 vue1-vue11笔记</li></ul><h1 id="YHF·Vue-项目-说明"><a href="#YHF·Vue-项目-说明" class="headerlink" title="YHF·Vue 项目 说明"></a>YHF·Vue 项目 说明</h1><ol><li>初始化项目<ul><li>搭建基础架构</li><li>安装依赖</li><li>测试架构能否执行</li></ul></li><li><p>搭建项目主页</p><ul><li>主页头部 Header,使用 MintUI 的 Header 组件</li><li>主页底部 Tabbar,使用 MUI 的 Tabbar.html<ul><li>在制作 购物车 小图标的时候，操作会相对多一些：</li><li>先把 扩展图标的 css 样式，拷贝到 项目中</li><li>拷贝 扩展字体库 ttf 文件，到项目中</li><li>为 购物车 小图标 ，添加 如下样式 <code>mui-icon mui-icon-extra mui-icon-extra-cart</code></li></ul></li><li>要在 中间区域放一个 router-view 来展示路由匹配到的区域</li><li>改造 tabbar 为 router-link</li><li>实现路由切换高亮 linkActiveClass: ‘mui-active’ // 覆盖默认的路由高亮的类</li><li>点击 tabbar 中的路由链接，展示对应的路由组件<ul><li>导入对应的组件</li><li>配置路由</li><li>在 app.vue 插入 router-view</li></ul></li><li>添加轮播图</li><li>加载首页轮播图数据<ul><li>获取数据， 如何获取呢， 使用 vue-resource</li><li>使用 vue-resource 的 this.$http.get 获取数据</li><li>获取到的数据，要保存到 data 身上</li><li>使用 v-for 循环渲染 每个 item 项</li></ul></li><li>改造 九宫格 区域的样式</li><li>改造 新闻资讯 路由链接</li><li>新闻资讯 页面 制作<ol><li>绘制界面， 使用 MUI 中的 media-list.html</li><li>使用 vue-resource 获取数据</li><li>渲染真实数据</li></ol></li><li><p>实现 新闻资讯列表 点击跳转到新闻详情</p><ol><li>把列表中的每一项改造为 router-link,同时，在跳转的时候应该提供唯一的 Id 标识符</li><li>创建新闻详情的组件页面 NewsInfo.vue</li><li>在 路由模块中，将 新闻详情的 路由地址 和 组件页面对应起来</li></ol></li><li><p>实现 新闻详情 的 页面布局 和数据渲染</p></li><li><p>单独封装一个 comment.vue 评论子组件</p><ol><li>先创建一个 单独的 comment.vue 组件模板</li><li>在需要使用 comment 组件的 页面中，先手动 导入 comment 组件</li></ol><ul><li><code>import comment from &#39;./comment.vue&#39;</code></li></ul><ol start="3"><li>在父组件中，使用 <code>components</code> 属性，将刚才导入 comment 组件，注册为自己的 子组件</li><li>将注册子组件时候的，注册名称，以 标签形式，在页面中 引用即可</li></ol></li><li><p>获取所有的评论数据显示到页面中</p></li><li><p>实现点击加载更多评论的功能</p><ol><li>为加载更多按钮，绑定点击事件，在事件中，请求 下一页数据</li><li>点击加载更多，让 pageIndex++ , 然后重新调用 this.getComments() 方法重新获取最新一页的数据</li><li>为了防止 新数据 覆盖老数据的情况，我们在 点击加载更多的时候，每当获取到新数据，应该让 老数据 调用 数组的 concat 方法，拼接上新数组</li></ol></li><li><p>发表评论</p><ol><li>把文本框做双向数据绑定</li><li>为发表按钮绑定一个事件</li><li>校验评论内容是否为空，如果为空，则 Toast 提示用户 评论内容不能为空</li><li>通过 vue-resource 发送一个请求，把评论内容提交给 服务器</li><li>当发表评论 OK 后，重新刷新列表，以查看最新的评论</li></ol><ul><li>如果调用 getComments 方法重新刷新评论列表的话，可能只能得到 最后一页的评论，前几页的评论获取不到</li><li>换一种思路： 当评论成功后，在客户端，手动拼接出一个 最新的评论对象，然后 调用 数组的 unshift 方法， 把最新的评论，追加到 data 中 comments 的开头；这样，就能 完美实现刷新评论列表的需求；</li></ul></li><li><p>改造图片分析 按钮为 路由的链接并显示对应的组件页面</p></li><li><p>绘制 图片列表 组件页面结构并美化样式</p><ol><li>制作 顶部的滑动条</li><li>制作 底部的图片列表</li></ol></li><li><p>制作顶部滑动条的坑们：</p><ol><li>需要借助于 MUI 中的 tab-top-webview-main.html</li><li>需要把 slider 区域的 mui-fullscreen 类去掉</li><li><p>滑动条无法正常触发滑动，通过检查官方文档，发现这是 JS 组件，需要被初始化一下：</p><ul><li>导入 mui.js</li><li>调用官方提供的 方式 去初始化：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mui(&apos;.mui-scroll-wrapper&apos;).scroll(&#123;</span><br><span class="line">  deceleration: 0.0005 //flick 减速系数，系数越大，滚动速度越慢，滚动距离越小，默认值0.0006</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>我们在初始化 滑动条 的时候，导入的 mui.js ，但是，控制台报错： <code>Uncaught TypeError: &#39;caller&#39;, &#39;callee&#39;, and &#39;arguments&#39; properties may not be accessed on strict mode</code></p><ul><li>经过我们合理的推测，觉得，可能是 mui.js 中用到了 ‘caller’, ‘callee’, and ‘arguments’ 东西，但是， webpack 打包好的 bundle.js 中，默认是启用严格模式的，所以，这两者冲突了；</li><li>解决方案： 1. 把 mui.js 中的 非严格 模式的代码改掉；但是不现实； 2. 把 webpack 打包时候的严格模式禁用掉；</li><li>最终，我们选择了 plan B 移除严格模式： 使用这个插件 babel-plugin-transform-remove-strict-mode</li></ul></li><li>刚进入 图片分享页面的时候， 滑动条无法正常工作， 经过我们认真的分析，发现， 如果要初始化 滑动条，必须要等 DOM 元素加载完毕，所以，我们把 初始化 滑动条 的代码，搬到了 mounted 生命周期函数中；</li><li>当 滑动条 调试 OK 后，发现， tabbar 无法正常工作了，这时候，我们需要把 每个 tabbar 按钮的 样式中 <code>mui-tab-item</code> 重新改一下名字；</li><li>获取所有分类，并渲染 分类列表；</li></ol></li><li><p>制作图片列表区域</p><ol><li>图片列表需要使用懒加载技术，我们可以使用 Mint-UI 提供的现成的 组件 <code>lazy-load</code></li><li>根据<code>lazy-load</code>的使用文档，尝试使用</li><li>渲染图片列表数据</li></ol></li><li><p>实现了 图片列表的 懒加载改造和 样式美化</p></li><li><p>实现了 点击图片 跳转到 图片详情页面</p><ol><li>在改造 li 成 router-link 的时候，需要使用 tag 属性指定要渲染为 哪种元素</li></ol></li><li><p>实现 详情页面的布局和美化，同时获取数据渲染页面</p></li><li><p>实现 图片详情中 缩略图的功能</p><ol><li>使用 插件 vue-preview 这个缩略图插件</li><li>获取到所有的图片列表，然后使用 v-for 指令渲染数据</li><li>注意： img 标签上的 class 不能去掉</li><li>注意： 每个 图片数据对象中，必须有 w 和 h 属性</li></ol></li><li><p>绘制 商品列表 页面基本结构并美化</p></li><li><p>尝试在手机上 去进行项目的预览和测试</p><ol><li>要保证自己的手机可以正常运行；</li><li>要保证 手机 和 开发项目的电脑 处于同一个 WIFI 环境中，也就是说 手机 可以 访问到 电脑的 IP</li><li>打开自己的 项目中 package.json 文件，在 dev 脚本中，添加一个 –host 指令， 把 当前 电脑的 WIFI IP 地址， 设置为 –host 的指令值；</li></ol></li><li><p>如何查看自己电脑所处 WIFI 的 IP 呢， 在 cmd 终端中运行 <code>ipconfig</code> ， 查看 无线网的 ip 地址</p></li></ul></li><li><p>把项目 git 远端存储库</p></li></ol><ul><li><a href="https://blog.csdn.net/testcs_dn/article/details/38496107" target="_blank" rel="noopener">开源协议</a></li><li><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00150154460073692d151e784de4d718c67ce836f72c7c4000" target="_blank" rel="noopener">廖雪峰教 git</a></li><li>初始化 git<ul><li>sudo git init</li><li>sudo git status</li><li>sudo git add .</li><li>sudo git commit -m “add init”</li><li>sudo git remote add origin <a href="https://github.com/YHF7/YHF7.github.io.git" target="_blank" rel="noopener">https://github.com/YHF7/YHF7.github.io.git</a></li><li>sudo git push -u origin master</li></ul></li></ul><h1 id="案例效果图"><a href="#案例效果图" class="headerlink" title="案例效果图"></a>案例效果图</h1><p><img src="/yhf-vue/yhf-vue1.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue2.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue3.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue4.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue5.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue6.png" alt="yhf-vue"><br><img src="/yhf-vue/yhf-vue7.png" alt="yhf-vue"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>心态蹦</title>
    <link href="http://yoursite.com/2018/10/24/2018-10-24/"/>
    <id>http://yoursite.com/2018/10/24/2018-10-24/</id>
    <published>2018-10-24T13:13:39.493Z</published>
    <updated>2018-10-24T13:22:37.324Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>颓废了好几天的我今天终于下定决心要走出颓废的日子，我告诉自己在这样下去真的点就输了一辈子了，不想在这样颓废下去，遇到一点点的问题，就颓废这是作为一个十几岁的青年该有的的吗，为什么要这样下去<br>后端开发是啥 我要学过后台开发啊，为啥我就写不出来呢，接口？交互？ 这些我好像都学过啊， 但是 vue 与 node php 如何交互呢？ 作为主攻前端的 是应该花时间系统的去学习后端吗 ， node 刚学完啊， 为什么不去 用 node 呢<br>有想用 node 也有想用 php 但是着么写呢 这个交互的过程着么去做呢 就因为做个练习没有后台接口 颓废了好几天？ 虽然我还没有解决这个问题 但是我不想在这样下去了，我会输掉自己的 继续努力</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>Vue day6 案例</title>
    <link href="http://yoursite.com/2018/10/19/2018-10-19/"/>
    <id>http://yoursite.com/2018/10/19/2018-10-19/</id>
    <published>2018-10-19T14:17:23.469Z</published>
    <updated>2018-10-19T14:30:33.114Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><ol><li>webpack-vue (webpack中使用vue)</li><li>webpack-vue-router</li><li>webpack-路由嵌套 抽离路由</li></ol><h1 id="一、webpack-vue"><a href="#一、webpack-vue" class="headerlink" title="一、webpack-vue"></a>一、webpack-vue</h1><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><ul><li>webpack 中使用vue<ul><li>安装 vue 包</li><li>导入组件</li><li>安装 vue 打包插件</li></ul></li><li>render 渲染页面</li><li>export default 和 export 向外暴露成员<ul><li>注意： export default 向外暴露的成员，可以使用任意的变量来接收</li><li>注意： 在一个模块中，export default 只允许向外暴露1次</li><li>注意： 在一个模块中，可以同时使用 export default 和 export 向外暴露成员</li></ul></li><li>import 接收成员</li></ul><h2 id="小案例-前往github"><a href="#小案例-前往github" class="headerlink" title="小案例(前往github)"></a>小案例(前往github)</h2><p><a href="https://github.com/YHF7/Vue/tree/master/day6/webpack-vue1" target="_blank" rel="noopener">webpack-vue</a></p><h1 id="二、webpack-vue-router"><a href="#二、webpack-vue-router" class="headerlink" title="二、webpack-vue-router"></a>二、webpack-vue-router</h1><h2 id="重点-1"><a href="#重点-1" class="headerlink" title="重点"></a>重点</h2><ul><li>在webpack 中使用路由<ul><li>安装 vue-router</li><li>手动安装vuerouter</li><li>创建路由</li><li>挂载路由</li><li>router-view 显示路由<h2 id="小案例-前往github-1"><a href="#小案例-前往github-1" class="headerlink" title="小案例(前往github)"></a>小案例(前往github)</h2><a href="https://github.com/YHF7/Vue/tree/master/day6/webpack-vue-router" target="_blank" rel="noopener">webpack-vue-router</a></li></ul></li></ul><h1 id="三、webpack-路由嵌套-抽离路由"><a href="#三、webpack-路由嵌套-抽离路由" class="headerlink" title="三、webpack-路由嵌套 抽离路由"></a>三、webpack-路由嵌套 抽离路由</h1><h2 id="重点-2"><a href="#重点-2" class="headerlink" title="重点"></a>重点</h2><ul><li>嵌套路由<ul><li>定义子组件</li><li>配置路由<h2 id="小案例-前往github-2"><a href="#小案例-前往github-2" class="headerlink" title="小案例(前往github)"></a>小案例(前往github)</h2><a href="https://github.com/YHF7/Vue/tree/master/day6/webpack-%E8%B7%AF%E7%94%B1%E5%B5%8C%E5%A5%97" target="_blank" rel="noopener">webpack-vue-路由嵌套</a></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue day5 案例</title>
    <link href="http://yoursite.com/2018/10/16/2018-10-16/"/>
    <id>http://yoursite.com/2018/10/16/2018-10-16/</id>
    <published>2018-10-16T15:26:07.363Z</published>
    <updated>2018-10-17T14:15:26.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><ol><li>父子组件直接传值</li><li>路由基础使用</li><li>webpack-study</li></ol><h1 id="一、-父子组件直接传值"><a href="#一、-父子组件直接传值" class="headerlink" title="一、 父子组件直接传值"></a>一、 父子组件直接传值</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.引包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.5.17.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 4.调用 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 6.: 绑定数据--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 11. @添加点击事件绑定函数--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">msg</span> <span class="attr">:yf</span>=<span class="string">"yhf"</span> @<span class="attr">cl</span>=<span class="string">"getData"</span>&gt;</span><span class="tag">&lt;/<span class="name">msg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 外部板块 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"tmp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 8.在模板调用 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个子组件---&#123;&#123;yf&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 13.创建一个按钮用来调用传值函数 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"点击给父组件传值"</span> @<span class="attr">click</span>=<span class="string">"setData"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2.创建子组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> msg = &#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">'#tmp'</span>,</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 7.定义父组件拿过来的数据</span></span></span><br><span class="line"><span class="javascript">        props: [<span class="string">'yf'</span>],</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 9.定义子组件的数据</span></span></span><br><span class="line"><span class="undefined">        data() &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                msgData: <span class="string">'这是子组件传给父组建的，我是儿子'</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 14.定义函数用来给父组件传值</span></span></span><br><span class="line"><span class="undefined">            setData()&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.$emit(<span class="string">'cl'</span>,<span class="keyword">this</span>.msgData)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建 Vue 实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 5.定义父级数据</span></span></span><br><span class="line"><span class="javascript">            yhf: <span class="string">'这个父组建，我是你爸爸'</span>,</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 10.定义一个空字符串接收数据</span></span></span><br><span class="line"><span class="javascript">            msData: <span class="string">''</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 12.定义函数接收子组件的数据 data 是传过来的数据</span></span></span><br><span class="line"><span class="undefined">            getData(data)&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.msData = data</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.msData);</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        components: &#123; <span class="comment">// 3.添加组件</span></span></span><br><span class="line"><span class="undefined">            msg</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、路由基础使用"><a href="#二、路由基础使用" class="headerlink" title="二、路由基础使用"></a>二、路由基础使用</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.5.17.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1. 引 vue-router 包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-router-3.0.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 5.调用路由 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 渲染路由标签 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/login"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/register"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 渲染路由容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 2.创建组件 登录和注册组件</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> login = &#123;</span></span><br><span class="line"><span class="xml">        template: "<span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是登录组件，点击登录<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>"</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> register = &#123;</span></span><br><span class="line"><span class="xml">        template: "<span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是注册组件，点击注册<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>"</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 3.创建路由</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> router = <span class="keyword">new</span> VueRouter(&#123;</span></span><br><span class="line"><span class="javascript">        routes: [&#123; <span class="comment">//设置路由主页重定向</span></span></span><br><span class="line"><span class="javascript">                path: <span class="string">'/'</span>,</span></span><br><span class="line"><span class="javascript">                redirect: <span class="string">'/login'</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="javascript">                path: <span class="string">'/login'</span>,</span></span><br><span class="line"><span class="undefined">                component: login</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            &#123;</span></span><br><span class="line"><span class="javascript">                path: <span class="string">'/register'</span>,</span></span><br><span class="line"><span class="undefined">                component: register</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        ]</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建 Vue 实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">        router <span class="comment">//4.挂载路由</span></span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、webpack-study"><a href="#三、webpack-study" class="headerlink" title="三、webpack-study"></a>三、webpack-study</h1><h2 id="1-案例说明"><a href="#1-案例说明" class="headerlink" title="1.案例说明"></a>1.案例说明</h2><ol><li>学习 webpack<ul><li>安装</li><li>基础使用</li><li>打包</li></ul></li><li>学习 webpack 的webpack-dev-server<ul><li>安装</li><li>自动打包</li><li>配置</li></ul></li><li>学习 webpack 的html css等打包配置</li></ol><h2 id="2-第三方插件"><a href="#2-第三方插件" class="headerlink" title="2.第三方插件"></a>2.第三方插件</h2><ul><li>jquery</li><li><a href="mailto:webpack@3.12.0" target="_blank" rel="noopener">webpack@3.12.0</a></li><li><a href="mailto:webpack-dev-server@2.6.0" target="_blank" rel="noopener">webpack-dev-server@2.6.0</a></li><li>html-webpack-plugin</li><li>css<ul><li>style-loader</li><li>css-loader</li></ul></li><li>less<ul><li>less-loader</li><li>less</li></ul></li><li>sass<ul><li>sass-loader</li><li>node-sass</li></ul></li></ul><h2 id="3-项目地址"><a href="#3-项目地址" class="headerlink" title="3.项目地址"></a>3.<a href="https://github.com/YHF7/Vue/tree/master/webpack-study" target="_blank" rel="noopener">项目地址</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue day4 案例</title>
    <link href="http://yoursite.com/2018/10/13/2018-10-13/"/>
    <id>http://yoursite.com/2018/10/13/2018-10-13/</id>
    <published>2018-10-13T15:34:56.774Z</published>
    <updated>2018-10-14T12:36:07.427Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><pre><code>1. 组件案例练习2. 路由嵌套3. 命名视图案例</code></pre><h1 id="一、组件案例练习"><a href="#一、组件案例练习" class="headerlink" title="一、组件案例练习"></a>一、组件案例练习</h1><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><ul><li>vue<ul><li>@(v-on) v-for :key v-model</li><li>localStorage 本地存储</li><li>子组件 data methods 方法</li><li>JSON</li><li>created 生命周期</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.5.17.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./lib/bootstrap-3.3.7.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tmp-box</span> @<span class="attr">add</span>=<span class="string">"addBox"</span>&gt;</span><span class="tag">&lt;/<span class="name">tmp-box</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">v-for</span>=<span class="string">"item in list"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"badge"</span>&gt;</span>评论人：&#123;&#123;item.name&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                &#123;&#123;item.con&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"tmp"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>姓名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">v-model</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span>评论：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">rows</span>=<span class="string">"3"</span> <span class="attr">v-model</span>=<span class="string">"con"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span> @<span class="attr">click</span>=<span class="string">'add'</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">let</span> tmpBox = &#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">'#tmp'</span>,</span></span><br><span class="line"><span class="undefined">        data() &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="javascript">                id: <span class="built_in">Date</span>.now(),</span></span><br><span class="line"><span class="javascript">                name: <span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">                con: <span class="string">''</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            add() &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> addCon = &#123;</span></span><br><span class="line"><span class="javascript">                    id: <span class="built_in">Date</span>.now(),</span></span><br><span class="line"><span class="javascript">                    name: <span class="keyword">this</span>.name,</span></span><br><span class="line"><span class="javascript">                    con: <span class="keyword">this</span>.con</span></span><br><span class="line"><span class="undefined">                &#125;;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (addCon.name!==<span class="string">''</span>&amp;&amp;addCon.con!==<span class="string">''</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">let</span> list = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">'yhf'</span>) || <span class="string">'[]'</span>);</span></span><br><span class="line"><span class="undefined">                    list.unshift(addCon);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    localStorage.setItem(<span class="string">'yhf'</span>, <span class="built_in">JSON</span>.stringify(list));</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.name = <span class="keyword">this</span>.con = <span class="string">''</span>;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.$emit(<span class="string">'add'</span>);</span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">'请输入姓名'</span>)</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="undefined">            list: [&#123;</span></span><br><span class="line"><span class="undefined">                    id: 1,</span></span><br><span class="line"><span class="javascript">                    name: <span class="string">'yhf'</span>,</span></span><br><span class="line"><span class="javascript">                    con: <span class="string">'djifjeifefefefe'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="undefined">                    id: 2,</span></span><br><span class="line"><span class="javascript">                    name: <span class="string">'yhf2'</span>,</span></span><br><span class="line"><span class="javascript">                    con: <span class="string">'djifjeifeefeffefefe'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">                &#123;</span></span><br><span class="line"><span class="undefined">                    id: 3,</span></span><br><span class="line"><span class="javascript">                    name: <span class="string">'yhf3'</span>,</span></span><br><span class="line"><span class="javascript">                    con: <span class="string">'djifjeifefeefefefefe'</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="undefined">            ]</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        created: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">this</span>.addBox()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;</span></span><br><span class="line"><span class="undefined">            addBox() &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> list = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">'yhf'</span>) || <span class="string">'[]'</span>);</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.list = list;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        components: &#123;</span></span><br><span class="line"><span class="undefined">            tmpBox</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、路由嵌套"><a href="#二、路由嵌套" class="headerlink" title="二、路由嵌套"></a>二、路由嵌套</h1><h2 id="重点-1"><a href="#重点-1" class="headerlink" title="重点"></a>重点</h2><ul><li>vue<ul><li>children 属性</li><li>子路由的设置 带/ 和不带/</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.5.17.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-router-3.0.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/account"</span>&gt;</span>Account<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"tmp1"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是 Account 组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/login"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/account/register"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> account = &#123;</span></span><br><span class="line"><span class="javascript">        template: <span class="string">'#tmp1'</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> login = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h3</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> register = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h3</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">h3</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span></span><br><span class="line"><span class="undefined">        routes: [&#123;</span></span><br><span class="line"><span class="javascript">                path: <span class="string">'/account'</span>,</span></span><br><span class="line"><span class="undefined">                component: account,</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 使用 children 属性，实现子路由，同时，子路由的 path 前面，不要带 / ，否则永远以根路径开始请求，这样不方便我们用户去理解URL地址</span></span></span><br><span class="line"><span class="undefined">                children: [&#123;</span></span><br><span class="line"><span class="javascript">                        path: <span class="string">'/login'</span>,</span></span><br><span class="line"><span class="undefined">                        component: login</span></span><br><span class="line"><span class="undefined">                    &#125;,</span></span><br><span class="line"><span class="undefined">                    &#123;</span></span><br><span class="line"><span class="javascript">                        path: <span class="string">'register'</span>,</span></span><br><span class="line"><span class="undefined">                        component: register</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                ]</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        ]</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建 Vue 实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">        router</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、命名视图案例"><a href="#三、命名视图案例" class="headerlink" title="三、命名视图案例"></a>三、命名视图案例</h1><h2 id="重点-2"><a href="#重点-2" class="headerlink" title="重点"></a>重点</h2><ul><li>vue<ul><li>属性名 name</li><li>components 多地址设置</li><li>css 设置</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.5.17.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-router-3.0.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        * &#123;</span></span><br><span class="line"><span class="undefined">            margin: 0;</span></span><br><span class="line"><span class="undefined">            padding: 0;</span></span><br><span class="line"><span class="undefined">            font-size: 16px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: orange;</span></span><br><span class="line"><span class="undefined">            height: 80px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.container</span> &#123;</span></span><br><span class="line"><span class="undefined">            display: flex;</span></span><br><span class="line"><span class="undefined">            height: 600px;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: lightgreen;</span></span><br><span class="line"><span class="undefined">            flex: 2;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.main</span> &#123;</span></span><br><span class="line"><span class="undefined">            background-color: lightpink;</span></span><br><span class="line"><span class="undefined">            flex: 8;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">router-view</span> <span class="attr">name</span>=<span class="string">"main"</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> header = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> leftBox = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>leftBox<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> mainBox = &#123;</span></span><br><span class="line"><span class="xml">        template: '<span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>mainBox<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span></span><br><span class="line"><span class="undefined">        routes: [&#123;</span></span><br><span class="line"><span class="javascript">            path: <span class="string">'/'</span>,</span></span><br><span class="line"><span class="undefined">            components: &#123;</span></span><br><span class="line"><span class="javascript">                <span class="string">'default'</span>: header,</span></span><br><span class="line"><span class="javascript">                <span class="string">'left'</span>: leftBox,</span></span><br><span class="line"><span class="javascript">                <span class="string">'main'</span>: mainBox</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;]</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 创建 Vue 实例,得到 ViewModel</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;&#125;,</span></span><br><span class="line"><span class="undefined">        router</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue day1 案例</title>
    <link href="http://yoursite.com/2018/10/08/2018-10-08(1)/"/>
    <id>http://yoursite.com/2018/10/08/2018-10-08(1)/</id>
    <published>2018-10-08T14:31:51.197Z</published>
    <updated>2018-10-08T14:50:03.074Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><ol><li>跑马灯效果</li><li>简易计算器</li></ol><h1 id="一、跑马灯效果"><a href="#一、跑马灯效果" class="headerlink" title="一、跑马灯效果"></a>一、跑马灯效果</h1><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><ul><li>@click(v-on:click)点击事件</li><li>字符串的截取和赋值</li><li>定时器的控制</li></ul><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/Vue/Vue-day1-1-1.png" alt="跑马灯效果"><br><img src="/Vue/Vue-day1-1-2.png" alt="跑马灯效果"></p><h2 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 1.倒入vue包 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.4.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 2.创建一个要控制的区域 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"浪起来"</span> @<span class="attr">click</span>=<span class="string">"lang"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"低调"</span> @<span class="attr">click</span>=<span class="string">"stop"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">//注意；在vm实例中，如果想要获取data上的数据，或者想要调用methos中的方法，必须通过this.数据名 或 this.方法名来进行访问，这里的this 就等于我们new出来的vm 实例对象</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">            el: <span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">            data:&#123;</span></span><br><span class="line"><span class="javascript">                msg: <span class="string">'猥琐发育，别浪～～！'</span>,</span></span><br><span class="line"><span class="javascript">                intervalId:<span class="literal">null</span> <span class="comment">//在data上定义 定时器Id</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="undefined">            methods:&#123;</span></span><br><span class="line"><span class="undefined">                lang() &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(<span class="keyword">this</span>.msg)</span></span><br><span class="line"><span class="undefined">                    </span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(<span class="keyword">this</span>.intervalId != <span class="literal">null</span>) <span class="keyword">return</span>;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.intervalId = setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                        <span class="comment">//获取到头的第一个字符</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> start = <span class="keyword">this</span>.msg.substring(<span class="number">0</span>,<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 获取到后面的所有字符</span></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">var</span> end = <span class="keyword">this</span>.msg.substring(<span class="number">1</span>)</span></span><br><span class="line"><span class="javascript">                        <span class="comment">// 重新拼接到新的字符串，并附值到 this.msg</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                        <span class="keyword">this</span>.msg = end + start</span></span><br><span class="line"><span class="undefined">                    &#125;,400)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">//注意：vm实例，会监听自己身上的data 中所有数据的变化 ，只要数据一发生变化，就会自动把 最新的数据，从data上同步到页面中去；【好处：程序员只需要关系数据,不需要考虑重新渲染dom页面】</span></span></span><br><span class="line"><span class="undefined">                &#125;,</span></span><br><span class="line"><span class="javascript">                stop() &#123;<span class="comment">//停止定时器</span></span></span><br><span class="line"><span class="javascript">                    clearInterval(<span class="keyword">this</span>.intervalId)</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 每当清楚了定时器之后，需要重新把定时器重制为null</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">this</span>.intervalId = <span class="literal">null</span>;</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 分析：</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 1.给 【浪起来】 按钮，绑定一个点击事件 v-on @</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 2.在按钮灯事件处理函数中，雌鹅相关灯业务逻辑代码：拿到msg字符串，然后调用字符串灯 substring 来进行字符串灯截取操作，吧 第一个截取出来放到最后面</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 3.为了实习点击按钮，自动截取的功能，需要把2步骤放到定时器里面</span></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、简易计算器"><a href="#二、简易计算器" class="headerlink" title="二、简易计算器"></a>二、简易计算器</h1><h2 id="重点-1"><a href="#重点-1" class="headerlink" title="重点"></a>重点</h2><ul><li>v-model(数据双向绑定)</li><li>v-click(点击事件)</li><li>数据的判断</li></ul><h2 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/Vue/Vue-day1-2-1.png" alt="简易计算器"><br><img src="/Vue/Vue-day1-2-2.png" alt="简易计算器"></p><h2 id="案例代码-1"><a href="#案例代码-1" class="headerlink" title="案例代码"></a>案例代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.4.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"n1"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"opt"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"+"</span>&gt;</span>+<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"-"</span>&gt;</span>-<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"*"</span>&gt;</span>*<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"/"</span>&gt;</span>/<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"n2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"="</span> @<span class="attr">click</span>=<span class="string">"calc"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"result"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="undefined">            n1: 0,</span></span><br><span class="line"><span class="undefined">            n2: 0,</span></span><br><span class="line"><span class="undefined">            result: 0,</span></span><br><span class="line"><span class="javascript">            opt: <span class="string">'+'</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods:&#123;</span></span><br><span class="line"><span class="javascript">            calc()&#123;<span class="comment">//计算器算数的方法</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//逻辑:</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// switch(this.opt)&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     case '+':</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     this.result = parseInt(this.n1)+parseInt(this.n2)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         break;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     case '-':</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     this.result = parseInt(this.n1)-parseInt(this.n2)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         break;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     case '*':</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     this.result = parseInt(this.n1)*parseInt(this.n2)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         break;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     case '/':</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     this.result = parseInt(this.n1)/parseInt(this.n2)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         break;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">//注意:这是投机取巧的方式，正式开发中尽量少用</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> cideStr = <span class="string">'parseInt(this.n1)'</span>+<span class="keyword">this</span>.opt+<span class="string">'parseInt(this.n2)'</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.result = <span class="built_in">eval</span>(cideStr)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>Vue day2 案例</title>
    <link href="http://yoursite.com/2018/10/08/2018-10-08(2)/"/>
    <id>http://yoursite.com/2018/10/08/2018-10-08(2)/</id>
    <published>2018-10-08T14:30:04.154Z</published>
    <updated>2018-10-09T15:19:20.700Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="案例分布"><a href="#案例分布" class="headerlink" title="案例分布"></a>案例分布</h1><ol><li>品牌列表案例</li></ol><h1 id="一、品牌列表案例"><a href="#一、品牌列表案例" class="headerlink" title="一、品牌列表案例"></a>一、品牌列表案例</h1><h2 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h2><ul><li>vue 指令<ul><li>v-model(数据双向绑定)</li><li>v-on(点击事件)</li><li>v-focus(光标定位) 自定义</li><li>v-color(颜色改变) 自定义</li><li>@keyup(键盘抬起)</li></ul></li><li>vue 添加方法<ul><li>new Vue({})</li><li>add()添加方法</li><li>del(id)删除方法</li><li>search 检索 关键字</li><li>Vue.filter 全局过滤器(过滤时间)</li><li>filters 私有化过滤器(局部)</li><li>padStart(填充完毕后的总数, 在前面填充的元素) 字符串新特性</li><li>Vue.directive 全局自定义方法 自定义获取焦点</li><li>directives 私有化自定义方法 </li><li>Vue.config.keyCodes.f2 = 113 自定义全局按键修饰符 （Vue.config 配置）</li></ul></li></ul><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/Vue/Vue-day2-1-1.png" alt="品牌列表案例"><br><img src="/Vue/Vue-day2-1-2.png" alt="品牌列表案例"><br><img src="/Vue/Vue-day2-1-3.png" alt="品牌列表案例"><br><img src="/Vue/Vue-day2-1-4.png" alt="品牌列表案例"></p><h2 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./lib/vue-2.4.0.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./lib/bootstrap-3.3.7.css"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 需要用到jquery吗？ --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span></span><br><span class="line">                    添加品牌</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body form-inline"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                    Id:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">v-model</span>=<span class="string">"id"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                    Name:</span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">v-model</span>=<span class="string">"name"</span> @<span class="attr">keyup.f2</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">&lt;!-- 在 vue中，使用事件绑定机制，为元素制定处理函数都时候，如果加了小括号，就可以为函数传参 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"添加"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">                    搜索名称关键字:</span><br><span class="line">                    <span class="comment">&lt;!-- vue中所有的指令，在调用的时候，都以v-开头 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">v-model</span>=<span class="string">"keywords"</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">v-focus</span> <span class="attr">v-color</span>=<span class="string">"'pink'"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered table-hover table-striped"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Id<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Name<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Ctime<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">th</span>&gt;</span>Operation<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 之前，v-for 中的数据 都是直接从data 上的list中直接渲染过来的 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 现在， 我们自定义的一个 search  方法，同时，把 搜索的关键字，通过传参的形式，传递给了search 方法 --&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- 在 search 方法内部，通过 执行 for 循环，把所有符合 搜索关键字的数据，保管到 一个新数组中。返回 --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">v-for</span>=<span class="string">"item in search(keywords)"</span> <span class="attr">:key</span>=<span class="string">"item.id"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;item.id&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">v-text</span>=<span class="string">"item.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123; item.ctime | dateFormat() &#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">""</span> @<span class="attr">click.prevent</span>=<span class="string">"del(item.id)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">v-color</span>=<span class="string">"'red'"</span> <span class="attr">v-fontweight</span>=<span class="string">"900"</span> <span class="attr">v-fontsize</span>=<span class="string">"'50px'"</span>&gt;</span>&#123;&#123;dt | dateFormat&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 全局的过滤器，进行时间的格式化</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 所谓的全局过滤器，就是所有的vm实例都共享的</span></span></span><br><span class="line"><span class="javascript">    Vue.filter(<span class="string">'dateFormat'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">dataStr, pattern=<span class="string">""</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">//根据给定的时间字符串，得到特定的时间</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dataStr)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> y = dt.getFullYear()</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> m = dt.getMonth() + <span class="number">1</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> d = dt.getDate()</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// return y + '-' + m + '-' d</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// return `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span>(pattern.toLowerCase() === <span class="string">'yyyy-mm-dd'</span>)&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">        &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> hh = dt.getHours()</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> mm = dt.getMinutes()</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> ss = dt.getSeconds()</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span> <span class="subst">$&#123;hh&#125;</span>:<span class="subst">$&#123;mm&#125;</span>:<span class="subst">$&#123;ss&#125;</span>`</span></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 自定义全局按键修饰符</span></span></span><br><span class="line"><span class="undefined">    Vue.config.keyCodes.f2 = 113</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//使用vue.directive() 定义全局都指令</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 其中：参数1:指令的名称，注意，在定义都时候，指令都名称前面，不需要加 v- 前缀，</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 但是：在调用都时候，必须 在指令都名称前面 加上 v- 前缀来进行调用</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 参数2: 是一个对象，这个对象身上，有一些指令相关都函数，这些函数可以在特定都阶段执行相关的操作</span></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">'focus'</span>,&#123;</span></span><br><span class="line"><span class="javascript">        bind: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;<span class="comment">//每当指令绑定到元素上的时候，会立即执行这个 bind 函数 ，只执行一次</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 注意： 在每个 函数中，第一个参数 el， 表示 被绑定了指令的那个元素，这个 el 参数，数一个原生的js对象</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 在元素 刚绑定了指令的时候，还没有 插入到 dom中去，这时候，调用focus 方法没有作用</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 因为，一个元素，只有插入dom之后，才能获取到焦点</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// el.focus()</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        inserted: <span class="function"><span class="keyword">function</span>(<span class="params">el</span>)</span>&#123;<span class="comment">//表示元素 插入到dom中的时候会执行 inserted 函数 只触发一次</span></span></span><br><span class="line"><span class="undefined">            el.focus()</span></span><br><span class="line"><span class="javascript">            <span class="comment">// 和js行为有关的操作最好在inserted中执行，防止js行为不生效</span></span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        updated: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//当vnode更新的时候，会执行 updated ，可能会触发多次</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//自定义一个 设置字体颜色的指令</span></span></span><br><span class="line"><span class="javascript">    Vue.directive(<span class="string">'color'</span>, &#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 样式，只要通过指令绑定给了元素，不管这个元素有没有插入到页面中去，这个元素肯定有了一个内联的样式</span></span></span><br><span class="line"><span class="javascript">        <span class="comment">// 将来元素肯定会显示到页面中，这时候，浏览器的渲染引擎必然会解析样式，应用给这个元素</span></span></span><br><span class="line"><span class="javascript">        bind: <span class="function"><span class="keyword">function</span>(<span class="params">el,binding</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// el.style.color = 'red'</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 和样式相关的操作，一般都可以在bind中执行</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined">            el.style.color = binding.value</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el:<span class="string">'#app'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="javascript">            id:<span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            name:<span class="string">''</span>,</span></span><br><span class="line"><span class="javascript">            keywords: <span class="string">''</span>, <span class="comment">//搜索关键字</span></span></span><br><span class="line"><span class="undefined">            list:[</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>: <span class="number">1</span> , <span class="attr">name</span>: <span class="string">'奔驰'</span> , <span class="attr">ctime</span>: <span class="keyword">new</span> <span class="built_in">Date</span>() &#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">id</span>: <span class="number">2</span> , <span class="attr">name</span>: <span class="string">'宝马'</span> , <span class="attr">ctime</span>: <span class="keyword">new</span> <span class="built_in">Date</span>() &#125;</span></span><br><span class="line"><span class="undefined">            ]</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods:&#123;</span></span><br><span class="line"><span class="javascript">            add()&#123;<span class="comment">//添加的方法</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 分析：</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 1.获取到 id 和 name，直接从data上获取</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 2.组织出一个对象</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 3.把对象调用数组都相关方法，添加到当前data上的list中</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 4.注意：在vue中已经实现数据都双向绑定，每当我们修改了data中的数据vue会默认监听到数据的改动，自动更新数据应用到页面上</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 5.当我们意识到上面的第四步的时候，就证明打击已经入门vue了，我们更多的是在进行vm中model数据的操作，同时在操作model数据的时候，指定的业务逻辑操作</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> car = &#123; <span class="attr">id</span>:<span class="keyword">this</span>.id , <span class="attr">name</span>: <span class="keyword">this</span>.name , <span class="attr">ctime</span>: <span class="keyword">new</span> <span class="built_in">Date</span>()&#125;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.list.push(car)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.id = <span class="keyword">this</span>.name = <span class="string">''</span></span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="javascript">            del(id)&#123;<span class="comment">//根据id删数据</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 分析：</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 1.如何根据id找到要删除对象的索引</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 2.如果找到索引了，直接调用 数组的splice方法</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.list.some((item,i)=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     if(item.id == id)&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         this.list.splice(i,1)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         // 在数组的some方法中，如果return true，就会立即终止这个数组的后续循环</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         return true;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> index = <span class="keyword">this</span>.list.findIndex(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(item.id == id)&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="literal">true</span>;</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">this</span>.list.splice(index,<span class="number">1</span>)</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="javascript">            search(keywords)&#123;<span class="comment">//根据关键字，进行数据的搜索</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// var newList = []</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// this.list.forEach(item=&gt;&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     if(item.name.indexOf(keywords) != -1)&#123;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//         newList.push(item)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// return newList;</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 注意： forEach some filter findIndex 这些都是属于数组的新方法</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// 都会对数组中的每一项，进行遍历，执行相关的操作</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="keyword">this</span>.list.filter(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="comment">// if(item.name.indexOf(keywords) != -1)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 注意：ES6中，为字符窜提供了一个新方法，叫做 String.prototype.includes(‘要包含的字符串’)</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// 如果包含，则返回 true ，否则返回 false</span></span></span><br><span class="line"><span class="javascript">                    <span class="comment">// contains</span></span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(item.name.includes(keywords))&#123;</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> item</span></span><br><span class="line"><span class="undefined">                    &#125;</span></span><br><span class="line"><span class="undefined">                &#125;)</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 如何自定义一个私有的过滤器（局部）</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> vm2 = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">'#app2'</span>,</span></span><br><span class="line"><span class="undefined">        data: &#123;</span></span><br><span class="line"><span class="javascript">            dt: <span class="keyword">new</span> <span class="built_in">Date</span>()</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="undefined">        methods: &#123;&#125;,</span></span><br><span class="line"><span class="javascript">        filters: &#123;<span class="comment">//定义私有过滤器  过滤器又两个条件 【过滤器名称 和 处理函数】</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">//过滤器调用的时候，采用的是就近原则，如果私有过滤器和全局过滤器名称一直，会优先调用私有的过滤器</span></span></span><br><span class="line"><span class="javascript">            dateFormat: <span class="function"><span class="keyword">function</span> (<span class="params">dataStr, pattern=<span class="string">""</span></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">//根据给定的时间字符串，得到特定的时间</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>(dataStr)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> y = dt.getFullYear()</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> m = (dt.getMonth() + <span class="number">1</span>).toString().padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> d = dt.getDate().toString().padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="comment">// return y + '-' + m + '-' d</span></span></span><br><span class="line"><span class="javascript">                <span class="comment">// return `$&#123;y&#125;-$&#123;m&#125;-$&#123;d&#125;`</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span>(pattern.toLowerCase() === <span class="string">'yyyy-mm-dd'</span>)&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span>`</span></span></span><br><span class="line"><span class="javascript">                &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> hh = dt.getHours().toString().padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> mm = dt.getMinutes().toString().padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">var</span> ss = dt.getSeconds().toString().padStart(<span class="number">2</span>,<span class="string">'0'</span>)</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;y&#125;</span>-<span class="subst">$&#123;m&#125;</span>-<span class="subst">$&#123;d&#125;</span> <span class="subst">$&#123;hh&#125;</span>:<span class="subst">$&#123;mm&#125;</span>:<span class="subst">$&#123;ss&#125;</span>`</span></span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;,</span></span><br><span class="line"><span class="javascript">        directives: &#123; <span class="comment">//自定义私有指令</span></span></span><br><span class="line"><span class="javascript">            <span class="string">'fontweight'</span>: &#123;<span class="comment">//设置字体粗细</span></span></span><br><span class="line"><span class="javascript">                bind: <span class="function"><span class="keyword">function</span> (<span class="params">el, binding</span>)</span>&#123;</span></span><br><span class="line"><span class="undefined">                    el.style.fontWeight = binding.value</span></span><br><span class="line"><span class="undefined">                &#125;</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="javascript">            <span class="string">'fontsize'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">el, binding</span>)</span>&#123;<span class="comment">//注意：这个是 function 等同于 把 代码写到 bind 和 update中去</span></span></span><br><span class="line"><span class="javascript">                el.style.fontSize = <span class="built_in">parseInt</span>(binding.value) + <span class="string">'px'</span></span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;)</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">//过滤器的定于语法</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Vue.filter('过滤器的名称',function()&#123;&#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">    <span class="comment">// 过滤器中的function，第一个参数 ，已经背规定死，永远都是，过滤器 管道符前面 传过了的数据</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// Vue.filter('过滤器的名称',function (data) &#123;</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">//     return data +'123'</span></span></span><br><span class="line"><span class="javascript">    <span class="comment">// &#125;)</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">        <span class="comment">// document.getElementById('search').focus()</span></span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 过滤器调用时候的格式 &#123;&#123;name | 过滤器的名称&#125;&#125; --&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Vue" scheme="http://yoursite.com/categories/Vue/"/>
    
    
      <category term="Vue 案例" scheme="http://yoursite.com/tags/Vue-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>nodejs 案例2</title>
    <link href="http://yoursite.com/2018/10/04/2018-10-04/"/>
    <id>http://yoursite.com/2018/10/04/2018-10-04/</id>
    <published>2018-10-04T09:37:17.494Z</published>
    <updated>2018-10-14T13:47:56.703Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="nodejs小案例"><a href="#nodejs小案例" class="headerlink" title="nodejs小案例"></a>nodejs小案例</h1><ul><li>YHF管理系统 升级优化<ul><li>实现增删改查</li><li>模块化</li></ul></li></ul><h1 id="YHF管理系统"><a href="#YHF管理系统" class="headerlink" title="YHF管理系统"></a>YHF管理系统</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/yhfgl/yhfgl1.png" alt="YHF管理系统"><br><img src="/yhfgl/yhfgl2.png" alt="YHF管理系统"><br><img src="/yhfgl/yhfgl3.png" alt="YHF管理系统"></p><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul><li>初始化</li><li>模板处理</li><li>案例说明</li></ul><h2 id="路由设计"><a href="#路由设计" class="headerlink" title="路由设计"></a>路由设计</h2><table><thead><tr><th>请求方法</th><th>请求路径</th><th>get 参数</th><th>post 参数</th><th>备注</th></tr></thead><tbody><tr><td>GET</td><td>/yhf</td><td></td><td></td><td>渲染首页</td></tr><tr><td>GET</td><td>/yhf/new</td><td></td><td></td><td>渲染添加系统成员页面</td></tr><tr><td>POST</td><td>/yhf/new</td><td></td><td>name、age、gender、hobbies、admin</td><td>处理添加系统成员请求</td></tr><tr><td>GET</td><td>/yhf/edit</td><td>_id</td><td></td><td>渲染编辑页面</td></tr><tr><td>POST</td><td>/yhf/edit</td><td></td><td>id、name、age、gender、hobbies、admin</td><td>处理编辑请求</td></tr><tr><td>GET</td><td>/yhf/delete</td><td>_id</td><td></td><td>处理删除请求</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="案例说明"><a href="#案例说明" class="headerlink" title="案例说明"></a>案例说明</h2><ul><li>1.页面的数据<ul><li>用 mongdb 装数据</li><li>挂载路由</li><li>app.get app.post 路由</li><li>app.listen 开启服务端口</li><li>node_modules \ public 页面数据共享</li></ul></li><li>2.页面显示<ul><li>router.js 和 students.js 控制路由与业务逻辑(模块化)</li><li>Express 为 Response 相应对象提供了一个方法：render</li><li>render 方法默认是不可以使用，但是如果配置了模板引擎就可以使用了</li><li>res.render(‘html模板名’, {模板数据})</li><li>第一个参数不能写路径，默认会去项目中的 views 目录查找该模板文件</li><li>也就是说 Express 有一个约定：开发人员把所有的视图文件都放到 views 目录中</li><li>express 模版引擎 express-art-template使用 res.render(‘文件名， {模板对象})</li></ul></li><li>3.数据传输<ul><li>body-parser 中间件 解析表单 POST 请求体 req.body 得到数据</li></ul></li><li>4.使用的外部插件<ul><li>mongoose</li><li>express</li><li>express-art-template</li><li>body-parse</li></ul></li><li>5.项目地址<ul><li><a href="https://github.com/YHF7/Node/nodejs2/glxt" target="_blank" rel="noopener">项目地址</a></li></ul></li><li>6.开发配置<ul><li>mac os 10.13.3</li><li>npm 6.4.1</li><li>node 10.10.0</li><li>Bootstrap v3</li></ul></li><li>7.案例功能<ul><li>添加成员</li><li>更新成员信息</li><li>删除成员</li><li>查看成员</li></ul></li><li>7.案例查看/使用<ul><li>sudo git clone <a href="https://github.com/YHF7/Node.git" target="_blank" rel="noopener">https://github.com/YHF7/Node.git</a></li><li>cd mypro/nodejs2/glxt</li><li>node app.js</li></ul></li></ul><h1 id="插件安装配置"><a href="#插件安装配置" class="headerlink" title="插件安装配置"></a>插件安装配置</h1><h2 id="express-前端开发框架"><a href="#express-前端开发框架" class="headerlink" title="express 前端开发框架"></a>express 前端开发框架</h2><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y //添加json初始化文件</span><br><span class="line">npm install express --save//安装express</span><br></pre></td></tr></table></figure></p><p>2.引包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br></pre></td></tr></table></figure></p><p>3.创建服务<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = express();</span><br></pre></td></tr></table></figure></p><p>4.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  req.send(<span class="string">'index.html'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="art-template-模版引擎-配置在express中"><a href="#art-template-模版引擎-配置在express中" class="headerlink" title="art-template 模版引擎 (配置在express中)"></a>art-template 模版引擎 (配置在express中)</h2><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template//express-art-templat依赖了art-template所以可以不用记载但是要安装</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></table></figure></p><p>2.配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.engine(<span class="string">'art'</span>,<span class="built_in">require</span>(<span class="string">'express-art-template'</span>))<span class="comment">//art 可以替换成其他的标示 html 等</span></span><br></pre></td></tr></table></figure></p><p>3.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 在 Express 中使用模板引擎有更好的方式：res.render('文件名， &#123;模板对象&#125;)</span></span><br><span class="line">  <span class="comment">// 可以自己尝试去看 art-template 官方文档：如何让 art-template 结合 Express 来使用</span></span><br><span class="line">    res.render(<span class="string">'index.html'</span>,&#123;</span><br><span class="line">        title: <span class="string">'hello world'</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>4.如果希望修改默认的 views 视图渲染存储目录， 可以如下修改<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个参数 views 不能写错</span></span><br><span class="line">app.set(<span class="string">'views'</span>, 目录路径)</span><br></pre></td></tr></table></figure></p><h2 id="body-parser-中间件-解析表单-post-请求体"><a href="#body-parser-中间件-解析表单-post-请求体" class="headerlink" title="body-parser 中间件(解析表单 post 请求体)"></a>body-parser 中间件(解析表单 post 请求体)</h2><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save body-parse</span><br></pre></td></tr></table></figure></p><p>2.引包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser);</span></span><br></pre></td></tr></table></figure></p><p>3.配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parse application/x-www-form-urlencoded 解析application</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"><span class="comment">// parse application/json 解析</span></span><br><span class="line">app.use(bodyParser.json());</span><br></pre></td></tr></table></figure></p><p>4.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/post'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> year = myDate.getFullYear(); <span class="comment">//获取完整的年份(4位,1970-????)</span></span><br><span class="line">    <span class="keyword">var</span> month = myDate.getMonth() + <span class="number">1</span>; <span class="comment">//获取当前月份(0-11,0代表1月)</span></span><br><span class="line">    <span class="keyword">var</span> date = myDate.getDate(); <span class="comment">//获取当前日(1-31)</span></span><br><span class="line">    <span class="keyword">let</span> comment = req.body;</span><br><span class="line">    comment.dateTime = year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + date;</span><br><span class="line">    comments.unshift(comment);</span><br><span class="line">    res.redirect(<span class="string">'/'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h1 id="mongoose-（mongodb数据库链接插件）"><a href="#mongoose-（mongodb数据库链接插件）" class="headerlink" title="mongoose （mongodb数据库链接插件）"></a>mongoose （mongodb数据库链接插件）</h1><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S mongoose</span><br></pre></td></tr></table></figure></p><p>2.引包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>);</span><br></pre></td></tr></table></figure></p><p>3.配置<br>// 连接数据库<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongoose.connect(<span class="string">'mongodb://localhost/test'</span>);</span><br></pre></td></tr></table></figure></p><p>// 创建一个模型<br>// 就是在设计数据库<br>// MongoDB 是动态的，非常灵活，只需要在代码中设计你的数据库就可以了<br>// mongoose 这个包就可以让你的设计编写过程变的非常的简单<br>4.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Cat = mongoose.model(<span class="string">'Cat'</span>, &#123;</span><br><span class="line">    name: <span class="built_in">String</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化一个 cat</span></span><br><span class="line"><span class="keyword">const</span> kitty = <span class="keyword">new</span> Cat(&#123;</span><br><span class="line">    name: <span class="string">'yhf'</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 持久化保存 kitty 实例</span></span><br><span class="line">kitty.save().then(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'meow'</span>));</span><br></pre></td></tr></table></figure></p><h1 id="数据库安装开启"><a href="#数据库安装开启" class="headerlink" title="数据库安装开启"></a>数据库安装开启</h1><p>安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo brew install mongodb</span><br></pre></td></tr></table></figure></p><p>开启<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mongod</span><br></pre></td></tr></table></figure></p><p>链接(默认链接本地服务)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo</span><br></pre></td></tr></table></figure></p><p>退出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></p><p>基本命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. show dbs 查看显示所以数据库</span><br><span class="line">2. db 查看当前链接打数据库</span><br><span class="line">3. use 数据库名称  切换到指定打数据库（如果没有会新建）</span><br><span class="line">4. 插入数据</span><br><span class="line">5. show collections 查看数据集合 </span><br><span class="line">6. db.students.find() 查看库中所以的数据</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Nodejs" scheme="http://yoursite.com/categories/Nodejs/"/>
    
    
      <category term="Nodejs案例" scheme="http://yoursite.com/tags/Nodejs%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>nodejs 案例1</title>
    <link href="http://yoursite.com/2018/10/02/2018-10-02/"/>
    <id>http://yoursite.com/2018/10/02/2018-10-02/</id>
    <published>2018-10-02T12:44:44.089Z</published>
    <updated>2018-10-14T13:47:34.491Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="nodejs小案例"><a href="#nodejs小案例" class="headerlink" title="nodejs小案例"></a>nodejs小案例</h1><ul><li>留言页<ul><li>实现添加数据</li></ul></li><li>学生管理系统<ul><li>实现增删改查</li><li>模块化</li></ul></li></ul><h1 id="留言页"><a href="#留言页" class="headerlink" title="留言页"></a>留言页</h1><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/nodeimgs/fbly1.png" alt="发表留言"><br><img src="/nodeimgs/fbly2.png" alt="发表留言"></p><h2 id="案例说明"><a href="#案例说明" class="headerlink" title="案例说明"></a>案例说明</h2><ul><li>1.页面的数据<ul><li>未链接数据库所以，用comments数组代替</li><li>app.get app.post 路由</li><li>app.listen 开启服务端口</li></ul></li><li>2.页面显示<ul><li>Express 为 Response 相应对象提供了一个方法：render</li><li>render 方法默认是不可以使用，但是如果配置了模板引擎就可以使用了</li><li>res.render(‘html模板名’, {模板数据})</li><li>第一个参数不能写路径，默认会去项目中的 views 目录查找该模板文件</li><li>也就是说 Express 有一个约定：开发人员把所有的视图文件都放到 views 目录中</li><li>express 模版引擎 express-art-template使用 res.render(‘文件名， {模板对象})</li></ul></li><li>3.数据传输<ul><li>body-parser 中间件 解析表单 POST 请求体 req.body 得到数据</li></ul></li><li>4.使用的外部插件<ul><li>express</li><li>express-art-template</li><li>body-parse</li></ul></li><li>5.项目地址<ul><li><a href="https://github.com/YHF7/Node/nodejs2/feedback-express" target="_blank" rel="noopener">项目地址</a></li></ul></li><li>6.开发配置<ul><li>mac os 10.13.3</li><li>npm 6.4.1</li><li>node 10.10.0</li><li>Bootstrap v3</li></ul></li><li>7.案例查看/使用<ul><li>sudo git clone <a href="https://github.com/YHF7/Node.git" target="_blank" rel="noopener">https://github.com/YHF7/Node.git</a></li><li>cd mypro/nodejs2/feedback-express/</li><li>node app.js</li></ul></li><li>8.具体功能<ul><li>增加数据</li><li>查看数据</li></ul></li></ul><h1 id="学生管理系统"><a href="#学生管理系统" class="headerlink" title="学生管理系统"></a>学生管理系统</h1><h2 id="效果图-1"><a href="#效果图-1" class="headerlink" title="效果图"></a>效果图</h2><p><img src="/nodeimgs/xsgl1.png" alt="学生管理系统"><br><img src="/nodeimgs/xsgl2.png" alt="学生管理系统"></p><h2 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h2><ul><li>初始化</li><li>模板处理</li><li>案例说明</li></ul><h2 id="路由设计"><a href="#路由设计" class="headerlink" title="路由设计"></a>路由设计</h2><table><thead><tr><th>请求方法</th><th>请求路径</th><th>get 参数</th><th>post 参数</th><th>备注</th></tr></thead><tbody><tr><td>GET</td><td>/studens</td><td></td><td></td><td>渲染首页</td></tr><tr><td>GET</td><td>/students/new</td><td></td><td></td><td>渲染添加学生页面</td></tr><tr><td>POST</td><td>/studens/new</td><td></td><td>name、age、gender、hobbies</td><td>处理添加学生请求</td></tr><tr><td>GET</td><td>/students/edit</td><td>id</td><td></td><td>渲染编辑页面</td></tr><tr><td>POST</td><td>/studens/edit</td><td></td><td>id、name、age、gender、hobbies</td><td>处理编辑请求</td></tr><tr><td>GET</td><td>/students/delete</td><td>id</td><td></td><td>处理删除请求</td></tr><tr><td></td><td></td><td></td><td></td></tr></tbody></table><h2 id="案例说明-1"><a href="#案例说明-1" class="headerlink" title="案例说明"></a>案例说明</h2><ul><li>1.页面的数据<ul><li>用 db.json 装数据</li><li>挂载路由</li><li>app.get app.post 路由</li><li>app.listen 开启服务端口</li><li>node_modules \ public 页面数据共享</li></ul></li><li>2.页面显示<ul><li>router.js 和 students.js 控制路由与业务逻辑(模块化)</li><li>Express 为 Response 相应对象提供了一个方法：render</li><li>render 方法默认是不可以使用，但是如果配置了模板引擎就可以使用了</li><li>res.render(‘html模板名’, {模板数据})</li><li>第一个参数不能写路径，默认会去项目中的 views 目录查找该模板文件</li><li>也就是说 Express 有一个约定：开发人员把所有的视图文件都放到 views 目录中</li><li>express 模版引擎 express-art-template使用 res.render(‘文件名， {模板对象})</li></ul></li><li>3.数据传输<ul><li>body-parser 中间件 解析表单 POST 请求体 req.body 得到数据</li></ul></li><li>4.使用的外部插件<ul><li>express</li><li>express-art-template</li><li>body-parse</li></ul></li><li>5.项目地址<ul><li><a href="https://github.com/YHF7/Node/nodejs2/crud-express" target="_blank" rel="noopener">项目地址</a></li></ul></li><li>6.开发配置<ul><li>mac os 10.13.3</li><li>npm 6.4.1</li><li>node 10.10.0</li><li>Bootstrap v3</li></ul></li><li>7.案例查看/使用<ul><li>sudo git clone <a href="https://github.com/YHF7/Node.git" target="_blank" rel="noopener">https://github.com/YHF7/Node.git</a></li><li>cd mypro/nodejs2/crud-express/</li><li>node app.js</li></ul></li><li>8.具体功能<ul><li>增加数据</li><li>修改数据</li><li>查看数据</li><li>删除数据</li></ul></li></ul><h1 id="插件安装配置"><a href="#插件安装配置" class="headerlink" title="插件安装配置"></a>插件安装配置</h1><h2 id="express-前端开发框架"><a href="#express-前端开发框架" class="headerlink" title="express 前端开发框架"></a>express 前端开发框架</h2><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm init -y //添加json初始化文件</span><br><span class="line">npm install express --save//安装express</span><br></pre></td></tr></table></figure></p><p>2.引包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br></pre></td></tr></table></figure></p><p>3.创建服务<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> app = express();</span><br></pre></td></tr></table></figure></p><p>4.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  req.send(<span class="string">'index.html'</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="art-template-模版引擎-配置在express中"><a href="#art-template-模版引擎-配置在express中" class="headerlink" title="art-template 模版引擎 (配置在express中)"></a>art-template 模版引擎 (配置在express中)</h2><h3 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h3><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save art-template//express-art-templat依赖了art-template所以可以不用记载但是要安装</span><br><span class="line">npm install --save express-art-template</span><br></pre></td></tr></table></figure></p><p>2.配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.engine(<span class="string">'art'</span>,<span class="built_in">require</span>(<span class="string">'express-art-template'</span>))<span class="comment">//art 可以替换成其他的标示 html 等</span></span><br></pre></td></tr></table></figure></p><p>3.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 在 Express 中使用模板引擎有更好的方式：res.render('文件名， &#123;模板对象&#125;)</span></span><br><span class="line">  <span class="comment">// 可以自己尝试去看 art-template 官方文档：如何让 art-template 结合 Express 来使用</span></span><br><span class="line">    res.render(<span class="string">'index.html'</span>,&#123;</span><br><span class="line">        title: <span class="string">'hello world'</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>4.如果希望修改默认的 views 视图渲染存储目录， 可以如下修改<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个参数 views 不能写错</span></span><br><span class="line">app.set(<span class="string">'views'</span>, 目录路径)</span><br></pre></td></tr></table></figure></p><h2 id="body-parser-中间件-解析表单-post-请求体"><a href="#body-parser-中间件-解析表单-post-请求体" class="headerlink" title="body-parser 中间件(解析表单 post 请求体)"></a>body-parser 中间件(解析表单 post 请求体)</h2><p>1.安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save body-parse</span><br></pre></td></tr></table></figure></p><p>2.引包<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser);</span></span><br></pre></td></tr></table></figure></p><p>3.配置<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// parse application/x-www-form-urlencoded 解析application</span></span><br><span class="line">app.use(bodyParser.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line"><span class="comment">// parse application/json 解析</span></span><br><span class="line">app.use(bodyParser.json());</span><br></pre></td></tr></table></figure></p><p>4.使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/post'</span>,<span class="function"><span class="keyword">function</span> (<span class="params">req,res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> myDate = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> year = myDate.getFullYear(); <span class="comment">//获取完整的年份(4位,1970-????)</span></span><br><span class="line">    <span class="keyword">var</span> month = myDate.getMonth() + <span class="number">1</span>; <span class="comment">//获取当前月份(0-11,0代表1月)</span></span><br><span class="line">    <span class="keyword">var</span> date = myDate.getDate(); <span class="comment">//获取当前日(1-31)</span></span><br><span class="line">    <span class="keyword">let</span> comment = req.body;</span><br><span class="line">    comment.dateTime = year + <span class="string">"-"</span> + month + <span class="string">"-"</span> + date;</span><br><span class="line">    comments.unshift(comment);</span><br><span class="line">    res.redirect(<span class="string">'/'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Nodejs" scheme="http://yoursite.com/categories/Nodejs/"/>
    
    
      <category term="Nodejs案例" scheme="http://yoursite.com/tags/Nodejs%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>学习心路历程</title>
    <link href="http://yoursite.com/2018/09/22/2018-09-22/"/>
    <id>http://yoursite.com/2018/09/22/2018-09-22/</id>
    <published>2018-09-22T13:44:49.281Z</published>
    <updated>2018-09-25T02:19:35.824Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>作为一个 IT 业学者，快要从事软件技术开发类的大二学生我内心很慌，不知道自己到底准备好了没有，感觉自己准备好了但是自己的技术好像并没有那么好，有时候还是很迷茫的，不知道自己到底要做什么该做什么，做什么才是对的一直都很迷糊该走前端路线还是后台开发呢，还是做全栈什么都要学<br>本来我以为前端只是很简单的页面，但是接触了后才发现虽然只是分了三个比较大一点点方向就没什么了，但是要学好并不是那么的容易的 css，html，js 掌握后还要学习各种的框架不断的去练习才可以让自己更加快速的写页面，然后学了一点点后台 php 和 java，就觉得自己很厉害了想去写一个系统<br>在我开始构想写这一个系统的时候我一开始写的是登陆页面的前后台，在我还没有写完的时候我遇到了问题后台数据的传输，虽然我解决了这个问题但是我也发现了自己所用的方法是最笨嘬的方法，在那个时候慢慢的回想自己学的知识，才发现自己写前端页面用原生写是可以写的出来的但是用到框架 vue 就不太懂，很多之前的知识因为不用也开始慢慢的忘记了，在这时候我才发现自己对前端有一定的了解但是对后台的庞大我是一无所知，比小白还小吧，虽然学过java，c，php这些后台语言但是没有用过这些写过系统，java写过的项目也是很早之前的都不记得了，用php做后台来写的是可以但是用的方法实在是太笨拙了，对于后台的很多交互方式作用也并不是很了解，只是会简单的与数据库进行交互，这对于在公司工作的话远远不够，所以又要开始新的历程，php框架开始php框架学习的时候，一开始配置apache服务器的时候弄了两天找了各种的方法才配置好服务器当时的内心真的是奔溃了，然后开始写代码了才发现后台语言框架的编写是很方便的但是在这过程中也遇到了问题，框架无法渲染可视页面，也是搞了两天各种方法用遍，后来的这几天都没有看php，而是把我一直在看的js高级教程看完，然后看node，后台的庞大让我有点害怕所以暂时放弃一下后台把前端的一些知识巩固一下再去看后台，把我的项目写好，作为编程学习者来说我并不算是优秀的一个，我算是那种比较懒又不聪明的那个，所以很多时候还是坚持着每天都学习，让自己每天都可以进步一点点，可能是我比较乐观我觉得自己比昨天好那就是自己进步了，但是我并不觉得自己很努力，因为还有更多的人比我更聪明更厉害更谦虚更努力，我本来都一无所有了虽然不惧怕从头再来，但是我输不起了，没有时间可以让我再去浪费再去输了，大二了马上就是要出来实习没有再多的机会可以让我去学习和拼搏，老师说我那么拼干什么说我很努力，但是我并没有觉得我自己很努力，我是觉得我永远感觉不到自己到底又多懒，我的对手到底有多强大，别人到底付出了多少的时间精力代价，而我只是每天都学习几个小时就觉得很累很累的人，我也不知道我自己这么懒可以用什么和别人去比拼，我也不想输，所以只可以每天坚持学一点，虽然追不上比我厉害很多的人但是起码不会让自己堕落下去，起码我还可以挺起胸膛为了生活去拼搏，我也不是家里有矿的人，我的父母什么也没有留给我，以后要什么样的生活，什么都要自己去打拼回来，我的父母和我说他们那时候爷爷奶奶也是什么都没有给他们都是他们自己一手一脚熬回来的，生活真的不容易，社会也不容易，能生存下来并且养大我们也不是容易，都是点点都熬出来我们没有经历过抗战内战文化大革命闹饥荒那些，我们从出生到现在都没有熬过一日苦爸妈都能给饱饭吃没有试过饿肚子，社会都残酷无情并不是不知道，要是想站稳脚步那必须把自己武装起来，打造成不屈的钢铁才能抵御最强烈的风暴，虽然这样真的很辛苦也不一定可以做到，但是真的没时间了，累了可以歇但是歇息的时候别人也是在奋斗的根本追不上别人的脚步，那些更加厉害的人更加的努力，不知道自己凭什么闲着，大家都是一个头颅两个手两个脚，为何自己就是那么的差劲，别人就是那么的厉害，别人都是在拼命为什么自己不可以，继续加油即使输了也没有关系，生活不会亏待付出努力的人<br>上学期认识了个已经毕业的师兄一直都没这么联系，是一位很厉害的师兄，这个学期突然联系我，不断的想我去参加比赛和我说了很多，从中学习到了很多也发现了很多自己的陋习，知道了很多的一些自己以前都不注意的问题也告诉了我一些方向，不断的在后面推动的我，和高手谈话每一次都可以收益非浅，不过说起引路人，还是在大一的时候认识的一个公司里面有着十几年工作经验的老大哥，一直对我比较好，每次请教都很细心的教导也不摆老大哥的架子很好人，算是我的引路人，从一开始的css，js，html，框架，php等这些知识都是看他的教程和与他交流学习，不断的指引我向前面走，感谢老大哥<br>虽然学校大一开始开始c语言html但是都是很基础很基础所以每一次上课都没有什么学的只可以回去自己学，大一第二学期的时候有java和数据库，但是也是非常基础对数据库没有什么兴趣所以并不是学的很好，这个学期开设了js，h5，javaweb，ps但是除了javaweb以外我都学过了而且学校一直都是学的很基础的东西完全都没有学到很多的真本事，虽然说打好基础很重要但是全部都是基础也没什么用，没有写过项目不知道着么去写项目，要这么去布局如何写，着么才可以达到很好的效果，根本都没有，然而经常被老师危险期末不给过我也是醉了！只可以自己控制好自己不断的去学习，但愿还能坚持住，彩虹的尽头总是会有希望的！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="个人" scheme="http://yoursite.com/categories/%E4%B8%AA%E4%BA%BA/"/>
    
    
      <category term="个人" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>闭包/沙箱/递归/深浅拷贝</title>
    <link href="http://yoursite.com/2018/09/19/2018-09-19/"/>
    <id>http://yoursite.com/2018/09/19/2018-09-19/</id>
    <published>2018-09-19T13:51:53.898Z</published>
    <updated>2018-09-25T02:19:26.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><p>闭包<br>闭包的概念:函数A中,有一个函数B,函数B中可以访问函数A中定义的变量或者是数据,此时形成了闭包(这句话暂时不严谨)<br>闭包的模式:函数模式的闭包,对象模式的闭包<br>闭包的作用:缓存数据,延长作用域链<br>闭包的优点和缺点:缓存数据<br>闭包的应用<br>//总结:如果想要缓存数据,就把这个数据放在外层的函数和里层的函数的中间位置<br>//闭包的作用:缓存数据.优点也是缺陷,没有及时的释放<br>//局部变量是在函数中,函数使用结束后,局部变量就会被自动的释放<br>//闭包后,里面的局部变量的使用作用域链就会被延长</p><p>沙箱<br>沙箱:环境,黑盒,在一个虚拟的环境中模拟真实世界,做实验,实验结果和真实世界的结果是一样,但是不会影响真实世界</p><p>递归<br>递归:函数中调用函数自己,此时就是递归,递归一定要有结束的条件</p><p>浅拷贝:拷贝就是复制,就相当于把一个对象中的所有的内容,复制一份给另一个对象,直接复制,或者说,就是把一个对象的地址给了另一个对象,他们指向相同,两个对象之间有共同的属性或者方法,都可以使用</p><p>深拷贝:拷贝还是复制,深:把一个对象中所有的属性或者方法,一个一个的找到.并且在另一个对象中开辟相应的空间,一个一个的存储到另一个对象中</p><p>案例：<br>闭包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;对自己狠点&lt;/title&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    ul &#123;</span><br><span class="line">      list-style-type: none;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    li &#123;</span><br><span class="line">      float: left;</span><br><span class="line">      margin-left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    img &#123;</span><br><span class="line">      width: 200px;</span><br><span class="line">      height: 180px;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    input &#123;</span><br><span class="line">      margin-left: 30%;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    //$永远都是24k纯帅的十八岁的杨哥$</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt;&lt;img src=&quot;images/ly.jpg&quot; alt=&quot;&quot;&gt;&lt;br/&gt;&lt;input type=&quot;button&quot; value=&quot;赞(1)&quot;&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;img src=&quot;images/lyml.jpg&quot; alt=&quot;&quot;&gt;&lt;br/&gt;&lt;input type=&quot;button&quot; value=&quot;赞(1)&quot;&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;img src=&quot;images/fj.jpg&quot; alt=&quot;&quot;&gt;&lt;br/&gt;&lt;input type=&quot;button&quot; value=&quot;赞(1)&quot;&gt;&lt;/li&gt;</span><br><span class="line">  &lt;li&gt;&lt;img src=&quot;images/bd.jpg&quot; alt=&quot;&quot;&gt;&lt;br/&gt;&lt;input type=&quot;button&quot; value=&quot;赞(1)&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">  //获取所有的按钮</span><br><span class="line">  //根据标签名字获取元素</span><br><span class="line">  function my$(tagName) &#123;</span><br><span class="line">    return document.getElementsByTagName(tagName);</span><br><span class="line">  &#125;</span><br><span class="line">  //闭包缓存数据</span><br><span class="line">  function getValue() &#123;</span><br><span class="line">    var value=2;</span><br><span class="line">    return function () &#123;</span><br><span class="line">      //每一次点击的时候,都应该改变当前点击按钮的value值</span><br><span class="line">      this.value=&quot;赞(&quot;+(value++)+&quot;)&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  //获取所有的按钮</span><br><span class="line">  var btnObjs=my$(&quot;input&quot;);</span><br><span class="line">  //循环遍历每个按钮,注册点击事件</span><br><span class="line">  for(var i=0;i&lt;btnObjs.length;i++)&#123;</span><br><span class="line">    //注册事件</span><br><span class="line">    btnObjs[i].onclick=getValue();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//  var btnObjs=my$(&quot;input&quot;);</span><br><span class="line">//  var value=1;</span><br><span class="line">//  //循环遍历每个按钮</span><br><span class="line">//  for(var i=0;i&lt;btnObjs.length;i++)&#123;</span><br><span class="line">//</span><br><span class="line">//    //为每个按钮注册点击事件</span><br><span class="line">//    btnObjs[i].onclick=function () &#123;</span><br><span class="line">//      console.log(&quot;哈哈&quot;);</span><br><span class="line">//      this.value=&quot;赞(&quot;+(value++)+&quot;)&quot;;</span><br><span class="line">//    &#125;;</span><br><span class="line">//  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>沙箱<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div&gt;这是div&lt;/div&gt;</span><br><span class="line">&lt;div&gt;这是div&lt;/div&gt;</span><br><span class="line">&lt;div&gt;这是div&lt;/div&gt;</span><br><span class="line">&lt;p&gt;这是p&lt;/p&gt;</span><br><span class="line">&lt;p&gt;这是p&lt;/p&gt;</span><br><span class="line">&lt;p&gt;这是p&lt;/p&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  var getTag = 10;</span><br><span class="line">  var dvObjs = 20;</span><br><span class="line">  var pObjs = 30;</span><br><span class="line">  (function () &#123;</span><br><span class="line">    //根据标签名字获取元素</span><br><span class="line">    function getTag(tagName) &#123;</span><br><span class="line">      return document.getElementsByTagName(tagName)</span><br><span class="line">    &#125;</span><br><span class="line">    //获取所有的div</span><br><span class="line">    var dvObjs = getTag(&quot;div&quot;);</span><br><span class="line">    for (var i = 0; i &lt; dvObjs.length; i++) &#123;</span><br><span class="line">      dvObjs[i].style.border = &quot;2px solid pink&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    //获取所有的p</span><br><span class="line">    var pObjs = getTag(&quot;p&quot;);</span><br><span class="line">    for (var i = 0; i &lt; pObjs.length; i++) &#123;</span><br><span class="line">      pObjs[i].style.border = &quot;2px solid pink&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;());</span><br><span class="line">  console.log(getTag);</span><br><span class="line">  console.log(dvObjs);</span><br><span class="line">  console.log(pObjs);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>递归<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;title&lt;/title&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    //求n个数字的和,5 计算1+2+3+4+5</span><br><span class="line">//    var sum=0;</span><br><span class="line">//    for(var i=1;i&lt;=5;i++)&#123;</span><br><span class="line">//      sum+=i;</span><br><span class="line">//    &#125;</span><br><span class="line">//    console.log(sum);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //递归实现:求n个数字的和   n=5---&gt;  5+4+3+2+1</span><br><span class="line"></span><br><span class="line">    //函数的声明</span><br><span class="line">//    function getSum(x) &#123;</span><br><span class="line">//      if(x==1)&#123;</span><br><span class="line">//        return 1;</span><br><span class="line">//      &#125;</span><br><span class="line">//      return x+getSum(x-1);</span><br><span class="line">//    &#125;</span><br><span class="line">//    //函数的调用</span><br><span class="line">//    console.log(getSum(5));</span><br><span class="line"></span><br><span class="line">    /*</span><br><span class="line">    *</span><br><span class="line">    * 执行过程:</span><br><span class="line">    * 代码执行getSum(5)---&gt;进入函数,此时的x是5,执行的是5+getSum(4),此时代码等待</span><br><span class="line">    * 此时5+getSum(4),代码先不进行计算,先执行getSum(4),进入函数,执行的是4+getSum(3),等待, 先执行的是getSum(3),进入函数,执行3+getSum(2),等待,先执行getSum(2),进入函数,执行 2+getSum(1);等待, 先执行getSum(1),执行的是x==1的判断,return 1,所以,</span><br><span class="line">    * 此时getSum(1)的结果是1,开始向外走出去</span><br><span class="line">    * 2+getSum(1) 此时的结果是:2+1</span><br><span class="line">    * 执行:</span><br><span class="line">    * getSum(2)----&gt;2+1</span><br><span class="line">    * 3+getSum(2) 此时的结果是3+2+1</span><br><span class="line">    * 4+getSum(3) 此时的结果是4+3+2+1</span><br><span class="line">    * 5+getSum(4) 此时的结果是5+4+3+2+1</span><br><span class="line">    *</span><br><span class="line">    * 结果:15</span><br><span class="line">    *</span><br><span class="line">    *</span><br><span class="line">    *</span><br><span class="line">    * */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //递归案例:求一个数字各个位数上的数字的和:  123   ---&gt;6 ---1+2+3</span><br><span class="line">    //523</span><br><span class="line">    function getEverySum(x) &#123;</span><br><span class="line">      if(x&lt;10)&#123;</span><br><span class="line">        return x;</span><br><span class="line">      &#125;</span><br><span class="line">      //获取的是这个数字的个位数</span><br><span class="line">      return x%10+getEverySum(parseInt(x/10));</span><br><span class="line">    &#125;</span><br><span class="line">   console.log(getEverySum(1364));//5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //递归案例:求斐波那契数列</span><br><span class="line"></span><br><span class="line">    function getFib(x) &#123;</span><br><span class="line">      if(x==1||x==2)&#123;</span><br><span class="line">        return 1</span><br><span class="line">      &#125;</span><br><span class="line">      return getFib(x-1)+getFib(x-2);</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(getFib(12));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>浅考备<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var obj1=&#123;</span><br><span class="line">      age:10,</span><br><span class="line">      sex:&quot;男&quot;,</span><br><span class="line">      car:[&quot;奔驰&quot;,&quot;宝马&quot;,&quot;特斯拉&quot;,&quot;奥拓&quot;]</span><br><span class="line">    &#125;;</span><br><span class="line">    //另一个对象</span><br><span class="line">    var obj2=&#123;&#125;;</span><br><span class="line">    </span><br><span class="line">    //写一个函数,作用:把一个对象的属性复制到另一个对象中,浅拷贝</span><br><span class="line">    //把a对象中的所有的属性复制到对象b中</span><br><span class="line">    function extend(a,b) &#123;</span><br><span class="line">      for(var key in a)&#123;</span><br><span class="line">        b[key]=a[key];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    extend(obj1,obj2);</span><br><span class="line">    console.dir(obj2);//开始的时候这个对象是空对象</span><br><span class="line">    console.dir(obj1);//有属性</span><br></pre></td></tr></table></figure></p><p>深拷贝<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">var obj1=&#123;</span><br><span class="line">      age:10,</span><br><span class="line">      sex:&quot;男&quot;,</span><br><span class="line">      car:[&quot;奔驰&quot;,&quot;宝马&quot;,&quot;特斯拉&quot;,&quot;奥拓&quot;],</span><br><span class="line">      dog:&#123;</span><br><span class="line">        name:&quot;大黄&quot;,</span><br><span class="line">        age:5,</span><br><span class="line">        color:&quot;黑白色&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    var obj2=&#123;&#125;;//空对象</span><br><span class="line">    //通过函数实现,把对象a中的所有的数据深拷贝到对象b中</span><br><span class="line">    function extend(a,b) &#123;</span><br><span class="line">      for(var key in a)&#123;</span><br><span class="line">        //先获取a对象中每个属性的值</span><br><span class="line">        var item=a[key];</span><br><span class="line">        //判断这个属性的值是不是数组</span><br><span class="line">        if(item instanceof Array)&#123;</span><br><span class="line">          //如果是数组,那么在b对象中添加一个新的属性,并且这个属性值也是数组</span><br><span class="line">          b[key]=[];</span><br><span class="line">          //调用这个方法，把a对象中这个数组的属性值一个一个的复制到b对象的这个数组属性中</span><br><span class="line">          extend(item,b[key]);</span><br><span class="line">        &#125;else if(item instanceof Object)&#123;//判断这个值是不是对象类型的</span><br><span class="line">     //如果是对象类型的,那么在b对象中添加一个属性,是一个空对象</span><br><span class="line">          b[key]=&#123;&#125;;</span><br><span class="line">          //再次调用这个函数,把a对象中的属性对象的值一个一个的复制到b对象的这个属性对象中</span><br><span class="line">          extend(item,b[key]);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">          //如果值是普通的数据,直接复制到b对象的这个属性中</span><br><span class="line">          b[key]=item;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    extend(obj1,obj2);</span><br><span class="line">    console.dir(obj1);</span><br><span class="line">    console.dir(obj2);</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="js笔记" scheme="http://yoursite.com/tags/js%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>面向对象案例表格排序--函数做返回值</title>
    <link href="http://yoursite.com/2018/09/12/2018-09-12(2)/"/>
    <id>http://yoursite.com/2018/09/12/2018-09-12(2)/</id>
    <published>2018-09-12T15:11:35.905Z</published>
    <updated>2018-09-25T02:19:22.518Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h1><p>1.数组的创建，添加，调用，输出<br>2.构造函数，原型方法添加，函数的调用<br>3.函数做返回值做数组的排序<br>4.元素的创建，添加，调用，获取，清除<br>5.innerHtml的使用</p><h1 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h1><p><img src="/bgpxal/bgpx1.png"><br><img src="/bgpxal/bgpx2.png"><br><img src="/bgpxal/bgpx3.png"></p><h1 id="素材"><a href="#素材" class="headerlink" title="素材"></a>素材</h1><p><img src="/bgpxal/bianxingjingang.jpg"><br><img src="/bgpxal/qiannvyouhun.jpg"><br><img src="/bgpxal/gongfu.jpg"><br><img src="/bgpxal/suduyujiqing.jpg"><br><img src="/bgpxal/dahuaxiyou.jpg"></p><h1 id="案例代码"><a href="#案例代码" class="headerlink" title="案例代码"></a>案例代码</h1><h3 id="Css-外部引入-style-css"><a href="#Css-外部引入-style-css" class="headerlink" title="Css (外部引入) style.css"></a>Css (外部引入) style.css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: yhf </span></span><br><span class="line"><span class="comment"> * @Date: 2018-09-12 20:43:23 </span></span><br><span class="line"><span class="comment"> * @Last Modified by: yhf</span></span><br><span class="line"><span class="comment"> * @Last Modified time: 2018-09-12 23:23:48</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/* 初始化页面 */</span></span><br><span class="line">* &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 表格 */</span></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 表头 */</span></span><br><span class="line"><span class="selector-tag">th</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 表格 */</span></span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Html"><a href="#Html" class="headerlink" title="Html"></a>Html</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Js-外部引入-index-js"><a href="#Js-外部引入-index-js" class="headerlink" title="Js(外部引入) index.js"></a>Js(外部引入) index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @Author: yhf </span></span><br><span class="line"><span class="comment"> * @Date: 2018-09-12 20:47:37 </span></span><br><span class="line"><span class="comment"> * @Last Modified by: yhf</span></span><br><span class="line"><span class="comment"> * @Last Modified time: 2018-09-12 23:16:19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数数组</span></span><br><span class="line"><span class="keyword">let</span> movieArray = [&#123;</span><br><span class="line">    img: <span class="string">"bianxingjingang.jpg"</span>,</span><br><span class="line">    movieName: <span class="string">"变形金刚"</span>,</span><br><span class="line">    star: <span class="string">"希亚·拉伯夫"</span>,</span><br><span class="line">    direct: <span class="string">"迈克尔·贝"</span>,</span><br><span class="line">    type: <span class="string">"d动作"</span>,</span><br><span class="line">    time: <span class="string">"2007年07月03日"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    img: <span class="string">"qiannvyouhun.jpg"</span>,</span><br><span class="line">    movieName: <span class="string">"倩女幽魂"</span>,</span><br><span class="line">    star: <span class="string">"张国荣"</span>,</span><br><span class="line">    direct: <span class="string">"程小东"</span>,</span><br><span class="line">    type: <span class="string">"j惊悚"</span>,</span><br><span class="line">    time: <span class="string">"1987年7月18日"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    img: <span class="string">"gongfu.jpg"</span>,</span><br><span class="line">    movieName: <span class="string">"功夫"</span>,</span><br><span class="line">    star: <span class="string">"周星驰"</span>,</span><br><span class="line">    direct: <span class="string">"周星驰"</span>,</span><br><span class="line">    type: <span class="string">"x喜剧"</span>,</span><br><span class="line">    time: <span class="string">"2014年12月24日"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    img: <span class="string">"suduyujiqing.jpg"</span>,</span><br><span class="line">    movieName: <span class="string">"速度与激情"</span>,</span><br><span class="line">    star: <span class="string">"保罗·沃克"</span>,</span><br><span class="line">    direct: <span class="string">"罗伯·科恩"</span>,</span><br><span class="line">    type: <span class="string">"d动作"</span>,</span><br><span class="line">    time: <span class="string">"2015年4月3日"</span></span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">    img: <span class="string">"dahuaxiyou.jpg"</span>,</span><br><span class="line">    movieName: <span class="string">"大话西游"</span>,</span><br><span class="line">    star: <span class="string">"周星驰"</span>,</span><br><span class="line">    direct: <span class="string">"刘镇伟"</span>,</span><br><span class="line">    type: <span class="string">"a爱情"</span>,</span><br><span class="line">    time: <span class="string">"2014年10月24日"</span></span><br><span class="line">&#125;</span><br><span class="line">];</span><br><span class="line"><span class="comment">// 获取元素的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$my</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(date);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.table = $my(date);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加原型方法 初始化</span></span><br><span class="line">Person.prototype.init = <span class="function"><span class="keyword">function</span> (<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 初始化表头</span></span><br><span class="line">    <span class="keyword">this</span>.initThead();</span><br><span class="line">    <span class="comment">// 初始化表格内容</span></span><br><span class="line">    <span class="keyword">this</span>.initTbody(date);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.initPx(date)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加原型方法 添加表头</span></span><br><span class="line">Person.prototype.initThead = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//先创建一个thead标签,创建tr-th,立刻加入到table中</span></span><br><span class="line">    <span class="keyword">var</span> thead = <span class="built_in">document</span>.createElement(<span class="string">"thead"</span>);</span><br><span class="line">    <span class="comment">// 给表头添加资料</span></span><br><span class="line">    thead.innerHTML = <span class="string">'&lt;tr&gt;&lt;th falg="img"&gt;影片&lt;/th&gt;&lt;th falg="star"&gt;主演&lt;/th&gt;&lt;th falg="direct"&gt;导演&lt;/th&gt;&lt;th falg="type"&gt;类别&lt;/th&gt;&lt;th falg="time"&gt;上映时间&lt;/th&gt;&lt;/tr&gt;'</span>;</span><br><span class="line">    <span class="comment">// 添加到表格</span></span><br><span class="line">    <span class="keyword">this</span>.table.appendChild(thead);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加原型方法 添加表格内容 刷新页面</span></span><br><span class="line">Person.prototype.initTbody = <span class="function"><span class="keyword">function</span> (<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 刷新页面，判断有id等于tob的时候删除</span></span><br><span class="line">    <span class="keyword">if</span> ($my(<span class="string">"#tob"</span>)) &#123;</span><br><span class="line">        <span class="keyword">this</span>.table.removeChild($my(<span class="string">"#tob"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 创建tbody</span></span><br><span class="line">    <span class="keyword">let</span> tbody = <span class="built_in">document</span>.createElement(<span class="string">"tbody"</span>);</span><br><span class="line">    <span class="comment">// 添加id</span></span><br><span class="line">    tbody.id = <span class="string">"tob"</span>;</span><br><span class="line">    <span class="comment">// 装数据的数组</span></span><br><span class="line">    <span class="keyword">let</span> arr=[];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; date.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> ele = date[i];</span><br><span class="line">        <span class="comment">// 把数组的数据拿出来添加到新的数组</span></span><br><span class="line">        arr.push(<span class="string">"&lt;tr&gt;&lt;td&gt;&lt;img src=images/"</span> + ele.img + <span class="string">"&gt; &lt;br /&gt;"</span> + ele.movieName + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + ele.star + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + ele.direct + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + ele.type + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + ele.time + <span class="string">"&lt;/td&gt;&lt;/tr&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把新数组中的元素拿出来添加到tbody  join是控制连接符 “”是空，表示没有链接符</span></span><br><span class="line">    tbody.innerHTML = arr.join(<span class="string">""</span>);</span><br><span class="line">    <span class="comment">// 把tbody添加到表格里面</span></span><br><span class="line">    <span class="keyword">this</span>.table.appendChild(tbody);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加原型方法 数组排序</span></span><br><span class="line">Person.prototype.Szpx = <span class="function"><span class="keyword">function</span> (<span class="params">date,attr</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">obj1,obj2</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (obj1[attr] &gt; obj2[attr]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj1[attr] == obj2[attr]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> ff = fn(attr);</span><br><span class="line">    date.sort(ff);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加原型方法 获取点击元素判断排序值</span></span><br><span class="line">Person.prototype.initPx = <span class="function"><span class="keyword">function</span> (<span class="params">date</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 获取每一个表头的th</span></span><br><span class="line">    <span class="keyword">let</span> ths = <span class="built_in">document</span>.querySelectorAll(<span class="string">"th"</span>);</span><br><span class="line">    <span class="comment">// 定义this</span></span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="comment">// 循环添加点击事件</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; ths.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> ele = ths[i];</span><br><span class="line">        ele.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 获取定义值</span></span><br><span class="line">            <span class="keyword">let</span> falg = <span class="keyword">this</span>.getAttribute(<span class="string">"falg"</span>);</span><br><span class="line">            <span class="comment">// 调用数组排序方法</span></span><br><span class="line">            that.Szpx(date,falg);</span><br><span class="line">            <span class="comment">// 调用刷新页面</span></span><br><span class="line">            that.initTbody(date);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// new实例对象</span></span><br><span class="line"><span class="keyword">let</span> pr = <span class="keyword">new</span> Person(<span class="string">"table"</span>);</span><br><span class="line"><span class="comment">// 调用实例的原型方法</span></span><br><span class="line">pr.init(movieArray);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="js笔记/案例" scheme="http://yoursite.com/tags/js%E7%AC%94%E8%AE%B0-%E6%A1%88%E4%BE%8B/"/>
    
  </entry>
  
  <entry>
    <title>apply/call/bind/函数</title>
    <link href="http://yoursite.com/2018/09/12/2018-09-12/"/>
    <id>http://yoursite.com/2018/09/12/2018-09-12/</id>
    <published>2018-09-12T14:43:19.885Z</published>
    <updated>2018-09-25T02:19:17.991Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h1><p>apply/call 都可以改变 this 的指向<br>apply 和 call 的使用方法<br>apply 和 call 方法中如果没有传入参数,或者是传入的是 null,那么调用该方法的函数对象中的 this 就是默认的 window</p><ul><li>apply 的使用语法</li><li>函数名字.apply(对象,[参数 1,参数 2,…]);</li><li>方法名字.apply(对象,[参数 1,参数 2,…]);</li><li>call 的使用语法</li><li>函数名字.call(对象,参数 1,参数 2,…);</li><li>方法名字.call(对象,参数 1,参数 2,…);</li><li>作用:改变 this 的指向</li><li>不同的地方:参数传递的方式是不一样的</li><li>只要是想使用别的对象的方法,并且希望这个方法是当前对象的,那么就可以使用 apply 或者是 call 的方法改变 this 的指向</li></ul><p>bind<br>bind 是用来复制一份<br>使用的语法:</p><ul><li>函数名字.bind(对象,参数 1,参数 2,…);—-&gt;返回值是复制之后的这个函数</li><li>方法名字.bind(对象,参数 1,参数 2,…);—-&gt;返回值是复制之后的这个方法</li></ul><p>函数<br>函数的值<br>函数中有一个 name 属性—–&gt;函数的名字,name 属性是只读的,不能修改<br>函数中有一个 arguments 属性—&gt;实参的个数<br>函数中有一个 length 属性—-&gt;函数定义的时候形参的个数<br>函数中有一个 caller 属性—-&gt;调用(f1 函数在 f2 函数中调用的,所以,此时调用者就是 f2)<br>函数作为参数的时候,如果是命名函数,那么只传入命名函数的名字,没有括号<br>函数可作为返回值</p><h1 id="练习代码"><a href="#练习代码" class="headerlink" title="练习代码"></a>练习代码</h1><h3 id="apply-call"><a href="#apply-call" class="headerlink" title="apply/call"></a>apply/call</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//案例一</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">age,sex</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.age=age;</span><br><span class="line">    <span class="keyword">this</span>.sex=sex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//通过原型添加方法</span></span><br><span class="line">Person.prototype.sayHi=<span class="function"><span class="keyword">function</span> (<span class="params">x,y</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"您好啊:"</span>+<span class="keyword">this</span>.sex);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1000</span>;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> per=<span class="keyword">new</span> Person(<span class="number">10</span>,<span class="string">"男"</span>);</span><br><span class="line">per.sayHi();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"=============="</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Student</span>(<span class="params">name,sex</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name=name;</span><br><span class="line">    <span class="keyword">this</span>.sex=sex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> stu=<span class="keyword">new</span> Student(<span class="string">"小明"</span>,<span class="string">"人妖"</span>);</span><br><span class="line"><span class="keyword">var</span> r1=per.sayHi.apply(stu,[<span class="number">10</span>,<span class="number">20</span>]);</span><br><span class="line"><span class="keyword">var</span> r2=per.sayHi.call(stu,<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(r1);</span><br><span class="line"><span class="built_in">console</span>.log(r2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//案例二</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>+<span class="string">":====&gt;调用了"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//f1是函数,f1也是对象</span></span><br><span class="line"><span class="built_in">console</span>.dir(f1);</span><br><span class="line"><span class="comment">//对象调用方法,说明,该对象中有这个方法</span></span><br><span class="line">f1.apply();</span><br><span class="line">f1.call();</span><br><span class="line"><span class="built_in">console</span>.log(f1.__proto__==<span class="built_in">Function</span>.prototype);</span><br><span class="line"><span class="comment">//所有的函数都是Function的实例对象</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span>.prototype);<span class="comment">//ƒ () &#123; [native code] &#125;</span></span><br><span class="line"><span class="built_in">console</span>.dir(<span class="built_in">Function</span>);</span><br><span class="line"><span class="comment">//apply和call方法实际上并不在函数这个实例对象中,而是在Function的prototype中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.sayHi=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"您好"</span>);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line">Person.prototype.eat=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"吃"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> per=<span class="keyword">new</span> Person();</span><br><span class="line">per.sayHi();</span><br><span class="line">per.eat();</span><br><span class="line"><span class="built_in">console</span>.dir(per);</span><br></pre></td></tr></table></figure><h3 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过对象,调用方法,产生随机数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ShowRandom</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//1-10的随机数</span></span><br><span class="line">    <span class="keyword">this</span>.number=<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random()*<span class="number">10</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加原型方法</span></span><br><span class="line">ShowRandom.prototype.show1=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//改变了定时器中的this的指向了,本来应该是window,现在是实例对象了</span></span><br><span class="line">    <span class="built_in">window</span>.setInterval(<span class="keyword">this</span>.show2.bind(<span class="keyword">this</span>),<span class="number">1000</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//添加原型方法</span></span><br><span class="line">ShowRandom.prototype.show2=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//显示随机数--</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">this</span>.number);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//实例对象</span></span><br><span class="line"><span class="keyword">var</span> sr=<span class="keyword">new</span> ShowRandom();</span><br><span class="line"><span class="comment">//调用方法,输出随机数字</span></span><br><span class="line"><span class="comment">//调用这个方法一次,可以不停的产生随机数字</span></span><br><span class="line">sr.show1();</span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h3 id="函数作为参数使用"><a href="#函数作为参数使用" class="headerlink" title="函数作为参数使用"></a>函数作为参数使用</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//案例一</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"f1的函数"</span>);</span><br><span class="line">     fn();<span class="comment">//此时fn当成是一个函数来使用的</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment">//fn是参数,最后作为函数使用了,函数是可以作为参数使用</span></span><br><span class="line">   <span class="comment">//传入匿名函数</span></span><br><span class="line">   f1(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"我是匿名函数"</span>);</span><br><span class="line">   &#125;);</span><br><span class="line">   <span class="comment">//命名函数</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"f2的函数"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   f1(f2);</span><br><span class="line">   <span class="comment">//函数作为参数的时候,如果是命名函数,那么只传入命名函数的名字,没有括号</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//案例二</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">     setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">"定时器开始"</span>);</span><br><span class="line">       fn();</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">"定时器结束"</span>);</span><br><span class="line">     &#125;,<span class="number">1000</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   f1(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">"好困啊,好累啊,就是想睡觉"</span>);</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//案例三</span></span><br><span class="line">     <span class="comment">//    var arr = [1, 100, 20, 200, 40, 50, 120, 10];</span></span><br><span class="line">    <span class="comment">//    //排序</span></span><br><span class="line">    <span class="comment">//    arr.sort();</span></span><br><span class="line">    <span class="comment">//    console.log(arr);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">1</span>, <span class="number">100</span>, <span class="number">20</span>, <span class="number">200</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">120</span>, <span class="number">10</span>];</span><br><span class="line">    <span class="comment">//排序---函数作为参数使用,匿名函数作为sort方法的参数使用,那么此时的匿名函数中有两个参数,</span></span><br><span class="line">    arr.sort(<span class="function"><span class="keyword">function</span> (<span class="params">obj1,obj2</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(obj1&gt;obj2)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(obj1==obj2)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(arr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr1=[<span class="string">"acdef"</span>,<span class="string">"abcd"</span>,<span class="string">"bcedf"</span>,<span class="string">"bced"</span>];</span><br><span class="line">    arr1.sort(<span class="function"><span class="keyword">function</span> (<span class="params">a,b</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(a&gt;b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">console</span>.log(arr1);</span><br></pre></td></tr></table></figure><h4 id="函数作为返回值使用"><a href="#函数作为返回值使用" class="headerlink" title="函数作为返回值使用"></a>函数作为返回值使用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//案例一</span></span><br><span class="line"><span class="comment">//判断这个对象和传入的类型是不是同一个类型</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getFunc</span>(<span class="params">type</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === type;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ff = getFunc(<span class="string">"[object Array]"</span>);</span><br><span class="line">    <span class="keyword">var</span> result = ff([<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>]);</span><br><span class="line">    <span class="built_in">console</span>.log(result);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ff1 = getFunc(<span class="string">"[object Object]"</span>);</span><br><span class="line">    <span class="keyword">var</span> dt = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">var</span> result1 = ff1(dt);</span><br><span class="line">    <span class="built_in">console</span>.log(result1);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//案例二</span></span><br><span class="line">        <span class="comment">//排序,每个文件都有名字，大小,时间,都可以按照某个属性的值进行排序</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//三部电影,电影有名字,大小,上映时间</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">File</span>(<span class="params">name, size, time</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.name = name;<span class="comment">//电影名字</span></span><br><span class="line">      <span class="keyword">this</span>.size = size;<span class="comment">//电影大小</span></span><br><span class="line">      <span class="keyword">this</span>.time = time;<span class="comment">//电影的上映时间</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> f1 = <span class="keyword">new</span> File(<span class="string">"jack.avi"</span>, <span class="string">"400M"</span>, <span class="string">"1997-12-12"</span>);</span><br><span class="line">    <span class="keyword">var</span> f2 = <span class="keyword">new</span> File(<span class="string">"tom.avi"</span>, <span class="string">"200M"</span>, <span class="string">"2017-12-12"</span>);</span><br><span class="line">    <span class="keyword">var</span> f3 = <span class="keyword">new</span> File(<span class="string">"xiaosu.avi"</span>, <span class="string">"800M"</span>, <span class="string">"2010-12-12"</span>);</span><br><span class="line">    <span class="keyword">var</span> arr = [f1, f2, f3];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">attr</span>) </span>&#123;</span><br><span class="line">      <span class="comment">//函数作为返回值</span></span><br><span class="line">      <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">getSort</span>(<span class="params">obj1, obj2</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (obj1[attr] &gt; obj2[attr]) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj1[attr] == obj2[attr]) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ff = fn(<span class="string">"name"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数作为参数</span></span><br><span class="line">    arr.sort(ff);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(arr[i].name + <span class="string">"====&gt;"</span> + arr[i].size + <span class="string">"===&gt;"</span> + arr[i].time);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="js笔记" scheme="http://yoursite.com/tags/js%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
